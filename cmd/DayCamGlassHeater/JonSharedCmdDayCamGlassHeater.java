// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: jon_shared_cmd_day_cam_glass_heater.proto
// Protobuf Java Version: 4.29.2

package cmd.DayCamGlassHeater;

public final class JonSharedCmdDayCamGlassHeater {
  private JonSharedCmdDayCamGlassHeater() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 2,
      /* suffix= */ "",
      JonSharedCmdDayCamGlassHeater.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface RootOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cmd.DayCamGlassHeater.Root)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.cmd.DayCamGlassHeater.Start start = 1;</code>
     * @return Whether the start field is set.
     */
    boolean hasStart();
    /**
     * <code>.cmd.DayCamGlassHeater.Start start = 1;</code>
     * @return The start.
     */
    cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start getStart();
    /**
     * <code>.cmd.DayCamGlassHeater.Start start = 1;</code>
     */
    cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.StartOrBuilder getStartOrBuilder();

    /**
     * <code>.cmd.DayCamGlassHeater.Stop stop = 2;</code>
     * @return Whether the stop field is set.
     */
    boolean hasStop();
    /**
     * <code>.cmd.DayCamGlassHeater.Stop stop = 2;</code>
     * @return The stop.
     */
    cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop getStop();
    /**
     * <code>.cmd.DayCamGlassHeater.Stop stop = 2;</code>
     */
    cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.StopOrBuilder getStopOrBuilder();

    /**
     * <code>.cmd.DayCamGlassHeater.TurnOn turn_on = 3;</code>
     * @return Whether the turnOn field is set.
     */
    boolean hasTurnOn();
    /**
     * <code>.cmd.DayCamGlassHeater.TurnOn turn_on = 3;</code>
     * @return The turnOn.
     */
    cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn getTurnOn();
    /**
     * <code>.cmd.DayCamGlassHeater.TurnOn turn_on = 3;</code>
     */
    cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOnOrBuilder getTurnOnOrBuilder();

    /**
     * <code>.cmd.DayCamGlassHeater.TurnOff turn_off = 4;</code>
     * @return Whether the turnOff field is set.
     */
    boolean hasTurnOff();
    /**
     * <code>.cmd.DayCamGlassHeater.TurnOff turn_off = 4;</code>
     * @return The turnOff.
     */
    cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff getTurnOff();
    /**
     * <code>.cmd.DayCamGlassHeater.TurnOff turn_off = 4;</code>
     */
    cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOffOrBuilder getTurnOffOrBuilder();

    /**
     * <code>.cmd.DayCamGlassHeater.GetMeteo get_meteo = 5;</code>
     * @return Whether the getMeteo field is set.
     */
    boolean hasGetMeteo();
    /**
     * <code>.cmd.DayCamGlassHeater.GetMeteo get_meteo = 5;</code>
     * @return The getMeteo.
     */
    cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo getGetMeteo();
    /**
     * <code>.cmd.DayCamGlassHeater.GetMeteo get_meteo = 5;</code>
     */
    cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteoOrBuilder getGetMeteoOrBuilder();

    cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root.CmdCase getCmdCase();
  }
  /**
   * Protobuf type {@code cmd.DayCamGlassHeater.Root}
   */
  public static final class Root extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:cmd.DayCamGlassHeater.Root)
      RootOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 2,
        /* suffix= */ "",
        Root.class.getName());
    }
    // Use Root.newBuilder() to construct.
    private Root(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Root() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.internal_static_cmd_DayCamGlassHeater_Root_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.internal_static_cmd_DayCamGlassHeater_Root_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root.class, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root.Builder.class);
    }

    private int cmdCase_ = 0;
    @SuppressWarnings("serial")
    private java.lang.Object cmd_;
    public enum CmdCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      START(1),
      STOP(2),
      TURN_ON(3),
      TURN_OFF(4),
      GET_METEO(5),
      CMD_NOT_SET(0);
      private final int value;
      private CmdCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static CmdCase valueOf(int value) {
        return forNumber(value);
      }

      public static CmdCase forNumber(int value) {
        switch (value) {
          case 1: return START;
          case 2: return STOP;
          case 3: return TURN_ON;
          case 4: return TURN_OFF;
          case 5: return GET_METEO;
          case 0: return CMD_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public CmdCase
    getCmdCase() {
      return CmdCase.forNumber(
          cmdCase_);
    }

    public static final int START_FIELD_NUMBER = 1;
    /**
     * <code>.cmd.DayCamGlassHeater.Start start = 1;</code>
     * @return Whether the start field is set.
     */
    @java.lang.Override
    public boolean hasStart() {
      return cmdCase_ == 1;
    }
    /**
     * <code>.cmd.DayCamGlassHeater.Start start = 1;</code>
     * @return The start.
     */
    @java.lang.Override
    public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start getStart() {
      if (cmdCase_ == 1) {
         return (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start) cmd_;
      }
      return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start.getDefaultInstance();
    }
    /**
     * <code>.cmd.DayCamGlassHeater.Start start = 1;</code>
     */
    @java.lang.Override
    public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.StartOrBuilder getStartOrBuilder() {
      if (cmdCase_ == 1) {
         return (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start) cmd_;
      }
      return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start.getDefaultInstance();
    }

    public static final int STOP_FIELD_NUMBER = 2;
    /**
     * <code>.cmd.DayCamGlassHeater.Stop stop = 2;</code>
     * @return Whether the stop field is set.
     */
    @java.lang.Override
    public boolean hasStop() {
      return cmdCase_ == 2;
    }
    /**
     * <code>.cmd.DayCamGlassHeater.Stop stop = 2;</code>
     * @return The stop.
     */
    @java.lang.Override
    public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop getStop() {
      if (cmdCase_ == 2) {
         return (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop) cmd_;
      }
      return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop.getDefaultInstance();
    }
    /**
     * <code>.cmd.DayCamGlassHeater.Stop stop = 2;</code>
     */
    @java.lang.Override
    public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.StopOrBuilder getStopOrBuilder() {
      if (cmdCase_ == 2) {
         return (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop) cmd_;
      }
      return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop.getDefaultInstance();
    }

    public static final int TURN_ON_FIELD_NUMBER = 3;
    /**
     * <code>.cmd.DayCamGlassHeater.TurnOn turn_on = 3;</code>
     * @return Whether the turnOn field is set.
     */
    @java.lang.Override
    public boolean hasTurnOn() {
      return cmdCase_ == 3;
    }
    /**
     * <code>.cmd.DayCamGlassHeater.TurnOn turn_on = 3;</code>
     * @return The turnOn.
     */
    @java.lang.Override
    public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn getTurnOn() {
      if (cmdCase_ == 3) {
         return (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn) cmd_;
      }
      return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn.getDefaultInstance();
    }
    /**
     * <code>.cmd.DayCamGlassHeater.TurnOn turn_on = 3;</code>
     */
    @java.lang.Override
    public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOnOrBuilder getTurnOnOrBuilder() {
      if (cmdCase_ == 3) {
         return (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn) cmd_;
      }
      return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn.getDefaultInstance();
    }

    public static final int TURN_OFF_FIELD_NUMBER = 4;
    /**
     * <code>.cmd.DayCamGlassHeater.TurnOff turn_off = 4;</code>
     * @return Whether the turnOff field is set.
     */
    @java.lang.Override
    public boolean hasTurnOff() {
      return cmdCase_ == 4;
    }
    /**
     * <code>.cmd.DayCamGlassHeater.TurnOff turn_off = 4;</code>
     * @return The turnOff.
     */
    @java.lang.Override
    public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff getTurnOff() {
      if (cmdCase_ == 4) {
         return (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff) cmd_;
      }
      return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff.getDefaultInstance();
    }
    /**
     * <code>.cmd.DayCamGlassHeater.TurnOff turn_off = 4;</code>
     */
    @java.lang.Override
    public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOffOrBuilder getTurnOffOrBuilder() {
      if (cmdCase_ == 4) {
         return (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff) cmd_;
      }
      return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff.getDefaultInstance();
    }

    public static final int GET_METEO_FIELD_NUMBER = 5;
    /**
     * <code>.cmd.DayCamGlassHeater.GetMeteo get_meteo = 5;</code>
     * @return Whether the getMeteo field is set.
     */
    @java.lang.Override
    public boolean hasGetMeteo() {
      return cmdCase_ == 5;
    }
    /**
     * <code>.cmd.DayCamGlassHeater.GetMeteo get_meteo = 5;</code>
     * @return The getMeteo.
     */
    @java.lang.Override
    public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo getGetMeteo() {
      if (cmdCase_ == 5) {
         return (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo) cmd_;
      }
      return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo.getDefaultInstance();
    }
    /**
     * <code>.cmd.DayCamGlassHeater.GetMeteo get_meteo = 5;</code>
     */
    @java.lang.Override
    public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteoOrBuilder getGetMeteoOrBuilder() {
      if (cmdCase_ == 5) {
         return (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo) cmd_;
      }
      return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (cmdCase_ == 1) {
        output.writeMessage(1, (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start) cmd_);
      }
      if (cmdCase_ == 2) {
        output.writeMessage(2, (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop) cmd_);
      }
      if (cmdCase_ == 3) {
        output.writeMessage(3, (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn) cmd_);
      }
      if (cmdCase_ == 4) {
        output.writeMessage(4, (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff) cmd_);
      }
      if (cmdCase_ == 5) {
        output.writeMessage(5, (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo) cmd_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (cmdCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start) cmd_);
      }
      if (cmdCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop) cmd_);
      }
      if (cmdCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn) cmd_);
      }
      if (cmdCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff) cmd_);
      }
      if (cmdCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo) cmd_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root)) {
        return super.equals(obj);
      }
      cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root other = (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root) obj;

      if (!getCmdCase().equals(other.getCmdCase())) return false;
      switch (cmdCase_) {
        case 1:
          if (!getStart()
              .equals(other.getStart())) return false;
          break;
        case 2:
          if (!getStop()
              .equals(other.getStop())) return false;
          break;
        case 3:
          if (!getTurnOn()
              .equals(other.getTurnOn())) return false;
          break;
        case 4:
          if (!getTurnOff()
              .equals(other.getTurnOff())) return false;
          break;
        case 5:
          if (!getGetMeteo()
              .equals(other.getGetMeteo())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (cmdCase_) {
        case 1:
          hash = (37 * hash) + START_FIELD_NUMBER;
          hash = (53 * hash) + getStart().hashCode();
          break;
        case 2:
          hash = (37 * hash) + STOP_FIELD_NUMBER;
          hash = (53 * hash) + getStop().hashCode();
          break;
        case 3:
          hash = (37 * hash) + TURN_ON_FIELD_NUMBER;
          hash = (53 * hash) + getTurnOn().hashCode();
          break;
        case 4:
          hash = (37 * hash) + TURN_OFF_FIELD_NUMBER;
          hash = (53 * hash) + getTurnOff().hashCode();
          break;
        case 5:
          hash = (37 * hash) + GET_METEO_FIELD_NUMBER;
          hash = (53 * hash) + getGetMeteo().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code cmd.DayCamGlassHeater.Root}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cmd.DayCamGlassHeater.Root)
        cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.RootOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.internal_static_cmd_DayCamGlassHeater_Root_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.internal_static_cmd_DayCamGlassHeater_Root_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root.class, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root.Builder.class);
      }

      // Construct using cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (startBuilder_ != null) {
          startBuilder_.clear();
        }
        if (stopBuilder_ != null) {
          stopBuilder_.clear();
        }
        if (turnOnBuilder_ != null) {
          turnOnBuilder_.clear();
        }
        if (turnOffBuilder_ != null) {
          turnOffBuilder_.clear();
        }
        if (getMeteoBuilder_ != null) {
          getMeteoBuilder_.clear();
        }
        cmdCase_ = 0;
        cmd_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.internal_static_cmd_DayCamGlassHeater_Root_descriptor;
      }

      @java.lang.Override
      public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root getDefaultInstanceForType() {
        return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root.getDefaultInstance();
      }

      @java.lang.Override
      public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root build() {
        cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root buildPartial() {
        cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root result = new cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root result) {
        int from_bitField0_ = bitField0_;
      }

      private void buildPartialOneofs(cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root result) {
        result.cmdCase_ = cmdCase_;
        result.cmd_ = this.cmd_;
        if (cmdCase_ == 1 &&
            startBuilder_ != null) {
          result.cmd_ = startBuilder_.build();
        }
        if (cmdCase_ == 2 &&
            stopBuilder_ != null) {
          result.cmd_ = stopBuilder_.build();
        }
        if (cmdCase_ == 3 &&
            turnOnBuilder_ != null) {
          result.cmd_ = turnOnBuilder_.build();
        }
        if (cmdCase_ == 4 &&
            turnOffBuilder_ != null) {
          result.cmd_ = turnOffBuilder_.build();
        }
        if (cmdCase_ == 5 &&
            getMeteoBuilder_ != null) {
          result.cmd_ = getMeteoBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root) {
          return mergeFrom((cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root other) {
        if (other == cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root.getDefaultInstance()) return this;
        switch (other.getCmdCase()) {
          case START: {
            mergeStart(other.getStart());
            break;
          }
          case STOP: {
            mergeStop(other.getStop());
            break;
          }
          case TURN_ON: {
            mergeTurnOn(other.getTurnOn());
            break;
          }
          case TURN_OFF: {
            mergeTurnOff(other.getTurnOff());
            break;
          }
          case GET_METEO: {
            mergeGetMeteo(other.getGetMeteo());
            break;
          }
          case CMD_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getStartFieldBuilder().getBuilder(),
                    extensionRegistry);
                cmdCase_ = 1;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getStopFieldBuilder().getBuilder(),
                    extensionRegistry);
                cmdCase_ = 2;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getTurnOnFieldBuilder().getBuilder(),
                    extensionRegistry);
                cmdCase_ = 3;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getTurnOffFieldBuilder().getBuilder(),
                    extensionRegistry);
                cmdCase_ = 4;
                break;
              } // case 34
              case 42: {
                input.readMessage(
                    getGetMeteoFieldBuilder().getBuilder(),
                    extensionRegistry);
                cmdCase_ = 5;
                break;
              } // case 42
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int cmdCase_ = 0;
      private java.lang.Object cmd_;
      public CmdCase
          getCmdCase() {
        return CmdCase.forNumber(
            cmdCase_);
      }

      public Builder clearCmd() {
        cmdCase_ = 0;
        cmd_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.SingleFieldBuilder<
          cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start.Builder, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.StartOrBuilder> startBuilder_;
      /**
       * <code>.cmd.DayCamGlassHeater.Start start = 1;</code>
       * @return Whether the start field is set.
       */
      @java.lang.Override
      public boolean hasStart() {
        return cmdCase_ == 1;
      }
      /**
       * <code>.cmd.DayCamGlassHeater.Start start = 1;</code>
       * @return The start.
       */
      @java.lang.Override
      public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start getStart() {
        if (startBuilder_ == null) {
          if (cmdCase_ == 1) {
            return (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start) cmd_;
          }
          return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start.getDefaultInstance();
        } else {
          if (cmdCase_ == 1) {
            return startBuilder_.getMessage();
          }
          return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start.getDefaultInstance();
        }
      }
      /**
       * <code>.cmd.DayCamGlassHeater.Start start = 1;</code>
       */
      public Builder setStart(cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start value) {
        if (startBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cmd_ = value;
          onChanged();
        } else {
          startBuilder_.setMessage(value);
        }
        cmdCase_ = 1;
        return this;
      }
      /**
       * <code>.cmd.DayCamGlassHeater.Start start = 1;</code>
       */
      public Builder setStart(
          cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start.Builder builderForValue) {
        if (startBuilder_ == null) {
          cmd_ = builderForValue.build();
          onChanged();
        } else {
          startBuilder_.setMessage(builderForValue.build());
        }
        cmdCase_ = 1;
        return this;
      }
      /**
       * <code>.cmd.DayCamGlassHeater.Start start = 1;</code>
       */
      public Builder mergeStart(cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start value) {
        if (startBuilder_ == null) {
          if (cmdCase_ == 1 &&
              cmd_ != cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start.getDefaultInstance()) {
            cmd_ = cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start.newBuilder((cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start) cmd_)
                .mergeFrom(value).buildPartial();
          } else {
            cmd_ = value;
          }
          onChanged();
        } else {
          if (cmdCase_ == 1) {
            startBuilder_.mergeFrom(value);
          } else {
            startBuilder_.setMessage(value);
          }
        }
        cmdCase_ = 1;
        return this;
      }
      /**
       * <code>.cmd.DayCamGlassHeater.Start start = 1;</code>
       */
      public Builder clearStart() {
        if (startBuilder_ == null) {
          if (cmdCase_ == 1) {
            cmdCase_ = 0;
            cmd_ = null;
            onChanged();
          }
        } else {
          if (cmdCase_ == 1) {
            cmdCase_ = 0;
            cmd_ = null;
          }
          startBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.cmd.DayCamGlassHeater.Start start = 1;</code>
       */
      public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start.Builder getStartBuilder() {
        return getStartFieldBuilder().getBuilder();
      }
      /**
       * <code>.cmd.DayCamGlassHeater.Start start = 1;</code>
       */
      @java.lang.Override
      public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.StartOrBuilder getStartOrBuilder() {
        if ((cmdCase_ == 1) && (startBuilder_ != null)) {
          return startBuilder_.getMessageOrBuilder();
        } else {
          if (cmdCase_ == 1) {
            return (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start) cmd_;
          }
          return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start.getDefaultInstance();
        }
      }
      /**
       * <code>.cmd.DayCamGlassHeater.Start start = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start.Builder, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.StartOrBuilder> 
          getStartFieldBuilder() {
        if (startBuilder_ == null) {
          if (!(cmdCase_ == 1)) {
            cmd_ = cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start.getDefaultInstance();
          }
          startBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start.Builder, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.StartOrBuilder>(
                  (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start) cmd_,
                  getParentForChildren(),
                  isClean());
          cmd_ = null;
        }
        cmdCase_ = 1;
        onChanged();
        return startBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop.Builder, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.StopOrBuilder> stopBuilder_;
      /**
       * <code>.cmd.DayCamGlassHeater.Stop stop = 2;</code>
       * @return Whether the stop field is set.
       */
      @java.lang.Override
      public boolean hasStop() {
        return cmdCase_ == 2;
      }
      /**
       * <code>.cmd.DayCamGlassHeater.Stop stop = 2;</code>
       * @return The stop.
       */
      @java.lang.Override
      public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop getStop() {
        if (stopBuilder_ == null) {
          if (cmdCase_ == 2) {
            return (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop) cmd_;
          }
          return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop.getDefaultInstance();
        } else {
          if (cmdCase_ == 2) {
            return stopBuilder_.getMessage();
          }
          return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop.getDefaultInstance();
        }
      }
      /**
       * <code>.cmd.DayCamGlassHeater.Stop stop = 2;</code>
       */
      public Builder setStop(cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop value) {
        if (stopBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cmd_ = value;
          onChanged();
        } else {
          stopBuilder_.setMessage(value);
        }
        cmdCase_ = 2;
        return this;
      }
      /**
       * <code>.cmd.DayCamGlassHeater.Stop stop = 2;</code>
       */
      public Builder setStop(
          cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop.Builder builderForValue) {
        if (stopBuilder_ == null) {
          cmd_ = builderForValue.build();
          onChanged();
        } else {
          stopBuilder_.setMessage(builderForValue.build());
        }
        cmdCase_ = 2;
        return this;
      }
      /**
       * <code>.cmd.DayCamGlassHeater.Stop stop = 2;</code>
       */
      public Builder mergeStop(cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop value) {
        if (stopBuilder_ == null) {
          if (cmdCase_ == 2 &&
              cmd_ != cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop.getDefaultInstance()) {
            cmd_ = cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop.newBuilder((cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop) cmd_)
                .mergeFrom(value).buildPartial();
          } else {
            cmd_ = value;
          }
          onChanged();
        } else {
          if (cmdCase_ == 2) {
            stopBuilder_.mergeFrom(value);
          } else {
            stopBuilder_.setMessage(value);
          }
        }
        cmdCase_ = 2;
        return this;
      }
      /**
       * <code>.cmd.DayCamGlassHeater.Stop stop = 2;</code>
       */
      public Builder clearStop() {
        if (stopBuilder_ == null) {
          if (cmdCase_ == 2) {
            cmdCase_ = 0;
            cmd_ = null;
            onChanged();
          }
        } else {
          if (cmdCase_ == 2) {
            cmdCase_ = 0;
            cmd_ = null;
          }
          stopBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.cmd.DayCamGlassHeater.Stop stop = 2;</code>
       */
      public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop.Builder getStopBuilder() {
        return getStopFieldBuilder().getBuilder();
      }
      /**
       * <code>.cmd.DayCamGlassHeater.Stop stop = 2;</code>
       */
      @java.lang.Override
      public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.StopOrBuilder getStopOrBuilder() {
        if ((cmdCase_ == 2) && (stopBuilder_ != null)) {
          return stopBuilder_.getMessageOrBuilder();
        } else {
          if (cmdCase_ == 2) {
            return (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop) cmd_;
          }
          return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop.getDefaultInstance();
        }
      }
      /**
       * <code>.cmd.DayCamGlassHeater.Stop stop = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop.Builder, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.StopOrBuilder> 
          getStopFieldBuilder() {
        if (stopBuilder_ == null) {
          if (!(cmdCase_ == 2)) {
            cmd_ = cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop.getDefaultInstance();
          }
          stopBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop.Builder, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.StopOrBuilder>(
                  (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop) cmd_,
                  getParentForChildren(),
                  isClean());
          cmd_ = null;
        }
        cmdCase_ = 2;
        onChanged();
        return stopBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn.Builder, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOnOrBuilder> turnOnBuilder_;
      /**
       * <code>.cmd.DayCamGlassHeater.TurnOn turn_on = 3;</code>
       * @return Whether the turnOn field is set.
       */
      @java.lang.Override
      public boolean hasTurnOn() {
        return cmdCase_ == 3;
      }
      /**
       * <code>.cmd.DayCamGlassHeater.TurnOn turn_on = 3;</code>
       * @return The turnOn.
       */
      @java.lang.Override
      public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn getTurnOn() {
        if (turnOnBuilder_ == null) {
          if (cmdCase_ == 3) {
            return (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn) cmd_;
          }
          return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn.getDefaultInstance();
        } else {
          if (cmdCase_ == 3) {
            return turnOnBuilder_.getMessage();
          }
          return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn.getDefaultInstance();
        }
      }
      /**
       * <code>.cmd.DayCamGlassHeater.TurnOn turn_on = 3;</code>
       */
      public Builder setTurnOn(cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn value) {
        if (turnOnBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cmd_ = value;
          onChanged();
        } else {
          turnOnBuilder_.setMessage(value);
        }
        cmdCase_ = 3;
        return this;
      }
      /**
       * <code>.cmd.DayCamGlassHeater.TurnOn turn_on = 3;</code>
       */
      public Builder setTurnOn(
          cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn.Builder builderForValue) {
        if (turnOnBuilder_ == null) {
          cmd_ = builderForValue.build();
          onChanged();
        } else {
          turnOnBuilder_.setMessage(builderForValue.build());
        }
        cmdCase_ = 3;
        return this;
      }
      /**
       * <code>.cmd.DayCamGlassHeater.TurnOn turn_on = 3;</code>
       */
      public Builder mergeTurnOn(cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn value) {
        if (turnOnBuilder_ == null) {
          if (cmdCase_ == 3 &&
              cmd_ != cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn.getDefaultInstance()) {
            cmd_ = cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn.newBuilder((cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn) cmd_)
                .mergeFrom(value).buildPartial();
          } else {
            cmd_ = value;
          }
          onChanged();
        } else {
          if (cmdCase_ == 3) {
            turnOnBuilder_.mergeFrom(value);
          } else {
            turnOnBuilder_.setMessage(value);
          }
        }
        cmdCase_ = 3;
        return this;
      }
      /**
       * <code>.cmd.DayCamGlassHeater.TurnOn turn_on = 3;</code>
       */
      public Builder clearTurnOn() {
        if (turnOnBuilder_ == null) {
          if (cmdCase_ == 3) {
            cmdCase_ = 0;
            cmd_ = null;
            onChanged();
          }
        } else {
          if (cmdCase_ == 3) {
            cmdCase_ = 0;
            cmd_ = null;
          }
          turnOnBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.cmd.DayCamGlassHeater.TurnOn turn_on = 3;</code>
       */
      public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn.Builder getTurnOnBuilder() {
        return getTurnOnFieldBuilder().getBuilder();
      }
      /**
       * <code>.cmd.DayCamGlassHeater.TurnOn turn_on = 3;</code>
       */
      @java.lang.Override
      public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOnOrBuilder getTurnOnOrBuilder() {
        if ((cmdCase_ == 3) && (turnOnBuilder_ != null)) {
          return turnOnBuilder_.getMessageOrBuilder();
        } else {
          if (cmdCase_ == 3) {
            return (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn) cmd_;
          }
          return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn.getDefaultInstance();
        }
      }
      /**
       * <code>.cmd.DayCamGlassHeater.TurnOn turn_on = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn.Builder, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOnOrBuilder> 
          getTurnOnFieldBuilder() {
        if (turnOnBuilder_ == null) {
          if (!(cmdCase_ == 3)) {
            cmd_ = cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn.getDefaultInstance();
          }
          turnOnBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn.Builder, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOnOrBuilder>(
                  (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn) cmd_,
                  getParentForChildren(),
                  isClean());
          cmd_ = null;
        }
        cmdCase_ = 3;
        onChanged();
        return turnOnBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff.Builder, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOffOrBuilder> turnOffBuilder_;
      /**
       * <code>.cmd.DayCamGlassHeater.TurnOff turn_off = 4;</code>
       * @return Whether the turnOff field is set.
       */
      @java.lang.Override
      public boolean hasTurnOff() {
        return cmdCase_ == 4;
      }
      /**
       * <code>.cmd.DayCamGlassHeater.TurnOff turn_off = 4;</code>
       * @return The turnOff.
       */
      @java.lang.Override
      public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff getTurnOff() {
        if (turnOffBuilder_ == null) {
          if (cmdCase_ == 4) {
            return (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff) cmd_;
          }
          return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff.getDefaultInstance();
        } else {
          if (cmdCase_ == 4) {
            return turnOffBuilder_.getMessage();
          }
          return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff.getDefaultInstance();
        }
      }
      /**
       * <code>.cmd.DayCamGlassHeater.TurnOff turn_off = 4;</code>
       */
      public Builder setTurnOff(cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff value) {
        if (turnOffBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cmd_ = value;
          onChanged();
        } else {
          turnOffBuilder_.setMessage(value);
        }
        cmdCase_ = 4;
        return this;
      }
      /**
       * <code>.cmd.DayCamGlassHeater.TurnOff turn_off = 4;</code>
       */
      public Builder setTurnOff(
          cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff.Builder builderForValue) {
        if (turnOffBuilder_ == null) {
          cmd_ = builderForValue.build();
          onChanged();
        } else {
          turnOffBuilder_.setMessage(builderForValue.build());
        }
        cmdCase_ = 4;
        return this;
      }
      /**
       * <code>.cmd.DayCamGlassHeater.TurnOff turn_off = 4;</code>
       */
      public Builder mergeTurnOff(cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff value) {
        if (turnOffBuilder_ == null) {
          if (cmdCase_ == 4 &&
              cmd_ != cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff.getDefaultInstance()) {
            cmd_ = cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff.newBuilder((cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff) cmd_)
                .mergeFrom(value).buildPartial();
          } else {
            cmd_ = value;
          }
          onChanged();
        } else {
          if (cmdCase_ == 4) {
            turnOffBuilder_.mergeFrom(value);
          } else {
            turnOffBuilder_.setMessage(value);
          }
        }
        cmdCase_ = 4;
        return this;
      }
      /**
       * <code>.cmd.DayCamGlassHeater.TurnOff turn_off = 4;</code>
       */
      public Builder clearTurnOff() {
        if (turnOffBuilder_ == null) {
          if (cmdCase_ == 4) {
            cmdCase_ = 0;
            cmd_ = null;
            onChanged();
          }
        } else {
          if (cmdCase_ == 4) {
            cmdCase_ = 0;
            cmd_ = null;
          }
          turnOffBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.cmd.DayCamGlassHeater.TurnOff turn_off = 4;</code>
       */
      public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff.Builder getTurnOffBuilder() {
        return getTurnOffFieldBuilder().getBuilder();
      }
      /**
       * <code>.cmd.DayCamGlassHeater.TurnOff turn_off = 4;</code>
       */
      @java.lang.Override
      public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOffOrBuilder getTurnOffOrBuilder() {
        if ((cmdCase_ == 4) && (turnOffBuilder_ != null)) {
          return turnOffBuilder_.getMessageOrBuilder();
        } else {
          if (cmdCase_ == 4) {
            return (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff) cmd_;
          }
          return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff.getDefaultInstance();
        }
      }
      /**
       * <code>.cmd.DayCamGlassHeater.TurnOff turn_off = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff.Builder, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOffOrBuilder> 
          getTurnOffFieldBuilder() {
        if (turnOffBuilder_ == null) {
          if (!(cmdCase_ == 4)) {
            cmd_ = cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff.getDefaultInstance();
          }
          turnOffBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff.Builder, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOffOrBuilder>(
                  (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff) cmd_,
                  getParentForChildren(),
                  isClean());
          cmd_ = null;
        }
        cmdCase_ = 4;
        onChanged();
        return turnOffBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo.Builder, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteoOrBuilder> getMeteoBuilder_;
      /**
       * <code>.cmd.DayCamGlassHeater.GetMeteo get_meteo = 5;</code>
       * @return Whether the getMeteo field is set.
       */
      @java.lang.Override
      public boolean hasGetMeteo() {
        return cmdCase_ == 5;
      }
      /**
       * <code>.cmd.DayCamGlassHeater.GetMeteo get_meteo = 5;</code>
       * @return The getMeteo.
       */
      @java.lang.Override
      public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo getGetMeteo() {
        if (getMeteoBuilder_ == null) {
          if (cmdCase_ == 5) {
            return (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo) cmd_;
          }
          return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo.getDefaultInstance();
        } else {
          if (cmdCase_ == 5) {
            return getMeteoBuilder_.getMessage();
          }
          return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo.getDefaultInstance();
        }
      }
      /**
       * <code>.cmd.DayCamGlassHeater.GetMeteo get_meteo = 5;</code>
       */
      public Builder setGetMeteo(cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo value) {
        if (getMeteoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cmd_ = value;
          onChanged();
        } else {
          getMeteoBuilder_.setMessage(value);
        }
        cmdCase_ = 5;
        return this;
      }
      /**
       * <code>.cmd.DayCamGlassHeater.GetMeteo get_meteo = 5;</code>
       */
      public Builder setGetMeteo(
          cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo.Builder builderForValue) {
        if (getMeteoBuilder_ == null) {
          cmd_ = builderForValue.build();
          onChanged();
        } else {
          getMeteoBuilder_.setMessage(builderForValue.build());
        }
        cmdCase_ = 5;
        return this;
      }
      /**
       * <code>.cmd.DayCamGlassHeater.GetMeteo get_meteo = 5;</code>
       */
      public Builder mergeGetMeteo(cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo value) {
        if (getMeteoBuilder_ == null) {
          if (cmdCase_ == 5 &&
              cmd_ != cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo.getDefaultInstance()) {
            cmd_ = cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo.newBuilder((cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo) cmd_)
                .mergeFrom(value).buildPartial();
          } else {
            cmd_ = value;
          }
          onChanged();
        } else {
          if (cmdCase_ == 5) {
            getMeteoBuilder_.mergeFrom(value);
          } else {
            getMeteoBuilder_.setMessage(value);
          }
        }
        cmdCase_ = 5;
        return this;
      }
      /**
       * <code>.cmd.DayCamGlassHeater.GetMeteo get_meteo = 5;</code>
       */
      public Builder clearGetMeteo() {
        if (getMeteoBuilder_ == null) {
          if (cmdCase_ == 5) {
            cmdCase_ = 0;
            cmd_ = null;
            onChanged();
          }
        } else {
          if (cmdCase_ == 5) {
            cmdCase_ = 0;
            cmd_ = null;
          }
          getMeteoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.cmd.DayCamGlassHeater.GetMeteo get_meteo = 5;</code>
       */
      public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo.Builder getGetMeteoBuilder() {
        return getGetMeteoFieldBuilder().getBuilder();
      }
      /**
       * <code>.cmd.DayCamGlassHeater.GetMeteo get_meteo = 5;</code>
       */
      @java.lang.Override
      public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteoOrBuilder getGetMeteoOrBuilder() {
        if ((cmdCase_ == 5) && (getMeteoBuilder_ != null)) {
          return getMeteoBuilder_.getMessageOrBuilder();
        } else {
          if (cmdCase_ == 5) {
            return (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo) cmd_;
          }
          return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo.getDefaultInstance();
        }
      }
      /**
       * <code>.cmd.DayCamGlassHeater.GetMeteo get_meteo = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo.Builder, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteoOrBuilder> 
          getGetMeteoFieldBuilder() {
        if (getMeteoBuilder_ == null) {
          if (!(cmdCase_ == 5)) {
            cmd_ = cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo.getDefaultInstance();
          }
          getMeteoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo.Builder, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteoOrBuilder>(
                  (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo) cmd_,
                  getParentForChildren(),
                  isClean());
          cmd_ = null;
        }
        cmdCase_ = 5;
        onChanged();
        return getMeteoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:cmd.DayCamGlassHeater.Root)
    }

    // @@protoc_insertion_point(class_scope:cmd.DayCamGlassHeater.Root)
    private static final cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root();
    }

    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Root>
        PARSER = new com.google.protobuf.AbstractParser<Root>() {
      @java.lang.Override
      public Root parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Root> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Root> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Root getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StartOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cmd.DayCamGlassHeater.Start)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code cmd.DayCamGlassHeater.Start}
   */
  public static final class Start extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:cmd.DayCamGlassHeater.Start)
      StartOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 2,
        /* suffix= */ "",
        Start.class.getName());
    }
    // Use Start.newBuilder() to construct.
    private Start(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Start() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.internal_static_cmd_DayCamGlassHeater_Start_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.internal_static_cmd_DayCamGlassHeater_Start_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start.class, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start)) {
        return super.equals(obj);
      }
      cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start other = (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start) obj;

      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code cmd.DayCamGlassHeater.Start}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cmd.DayCamGlassHeater.Start)
        cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.StartOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.internal_static_cmd_DayCamGlassHeater_Start_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.internal_static_cmd_DayCamGlassHeater_Start_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start.class, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start.Builder.class);
      }

      // Construct using cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.internal_static_cmd_DayCamGlassHeater_Start_descriptor;
      }

      @java.lang.Override
      public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start getDefaultInstanceForType() {
        return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start.getDefaultInstance();
      }

      @java.lang.Override
      public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start build() {
        cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start buildPartial() {
        cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start result = new cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start) {
          return mergeFrom((cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start other) {
        if (other == cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      // @@protoc_insertion_point(builder_scope:cmd.DayCamGlassHeater.Start)
    }

    // @@protoc_insertion_point(class_scope:cmd.DayCamGlassHeater.Start)
    private static final cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start();
    }

    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Start>
        PARSER = new com.google.protobuf.AbstractParser<Start>() {
      @java.lang.Override
      public Start parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Start> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Start> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Start getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StopOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cmd.DayCamGlassHeater.Stop)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code cmd.DayCamGlassHeater.Stop}
   */
  public static final class Stop extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:cmd.DayCamGlassHeater.Stop)
      StopOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 2,
        /* suffix= */ "",
        Stop.class.getName());
    }
    // Use Stop.newBuilder() to construct.
    private Stop(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Stop() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.internal_static_cmd_DayCamGlassHeater_Stop_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.internal_static_cmd_DayCamGlassHeater_Stop_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop.class, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop)) {
        return super.equals(obj);
      }
      cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop other = (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop) obj;

      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code cmd.DayCamGlassHeater.Stop}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cmd.DayCamGlassHeater.Stop)
        cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.StopOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.internal_static_cmd_DayCamGlassHeater_Stop_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.internal_static_cmd_DayCamGlassHeater_Stop_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop.class, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop.Builder.class);
      }

      // Construct using cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.internal_static_cmd_DayCamGlassHeater_Stop_descriptor;
      }

      @java.lang.Override
      public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop getDefaultInstanceForType() {
        return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop.getDefaultInstance();
      }

      @java.lang.Override
      public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop build() {
        cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop buildPartial() {
        cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop result = new cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop) {
          return mergeFrom((cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop other) {
        if (other == cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      // @@protoc_insertion_point(builder_scope:cmd.DayCamGlassHeater.Stop)
    }

    // @@protoc_insertion_point(class_scope:cmd.DayCamGlassHeater.Stop)
    private static final cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop();
    }

    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Stop>
        PARSER = new com.google.protobuf.AbstractParser<Stop>() {
      @java.lang.Override
      public Stop parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Stop> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Stop> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.Stop getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TurnOnOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cmd.DayCamGlassHeater.TurnOn)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code cmd.DayCamGlassHeater.TurnOn}
   */
  public static final class TurnOn extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:cmd.DayCamGlassHeater.TurnOn)
      TurnOnOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 2,
        /* suffix= */ "",
        TurnOn.class.getName());
    }
    // Use TurnOn.newBuilder() to construct.
    private TurnOn(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private TurnOn() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.internal_static_cmd_DayCamGlassHeater_TurnOn_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.internal_static_cmd_DayCamGlassHeater_TurnOn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn.class, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn)) {
        return super.equals(obj);
      }
      cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn other = (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn) obj;

      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code cmd.DayCamGlassHeater.TurnOn}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cmd.DayCamGlassHeater.TurnOn)
        cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOnOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.internal_static_cmd_DayCamGlassHeater_TurnOn_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.internal_static_cmd_DayCamGlassHeater_TurnOn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn.class, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn.Builder.class);
      }

      // Construct using cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.internal_static_cmd_DayCamGlassHeater_TurnOn_descriptor;
      }

      @java.lang.Override
      public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn getDefaultInstanceForType() {
        return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn.getDefaultInstance();
      }

      @java.lang.Override
      public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn build() {
        cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn buildPartial() {
        cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn result = new cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn) {
          return mergeFrom((cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn other) {
        if (other == cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      // @@protoc_insertion_point(builder_scope:cmd.DayCamGlassHeater.TurnOn)
    }

    // @@protoc_insertion_point(class_scope:cmd.DayCamGlassHeater.TurnOn)
    private static final cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn();
    }

    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TurnOn>
        PARSER = new com.google.protobuf.AbstractParser<TurnOn>() {
      @java.lang.Override
      public TurnOn parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<TurnOn> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TurnOn> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOn getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TurnOffOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cmd.DayCamGlassHeater.TurnOff)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code cmd.DayCamGlassHeater.TurnOff}
   */
  public static final class TurnOff extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:cmd.DayCamGlassHeater.TurnOff)
      TurnOffOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 2,
        /* suffix= */ "",
        TurnOff.class.getName());
    }
    // Use TurnOff.newBuilder() to construct.
    private TurnOff(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private TurnOff() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.internal_static_cmd_DayCamGlassHeater_TurnOff_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.internal_static_cmd_DayCamGlassHeater_TurnOff_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff.class, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff)) {
        return super.equals(obj);
      }
      cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff other = (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff) obj;

      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code cmd.DayCamGlassHeater.TurnOff}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cmd.DayCamGlassHeater.TurnOff)
        cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOffOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.internal_static_cmd_DayCamGlassHeater_TurnOff_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.internal_static_cmd_DayCamGlassHeater_TurnOff_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff.class, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff.Builder.class);
      }

      // Construct using cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.internal_static_cmd_DayCamGlassHeater_TurnOff_descriptor;
      }

      @java.lang.Override
      public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff getDefaultInstanceForType() {
        return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff.getDefaultInstance();
      }

      @java.lang.Override
      public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff build() {
        cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff buildPartial() {
        cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff result = new cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff) {
          return mergeFrom((cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff other) {
        if (other == cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      // @@protoc_insertion_point(builder_scope:cmd.DayCamGlassHeater.TurnOff)
    }

    // @@protoc_insertion_point(class_scope:cmd.DayCamGlassHeater.TurnOff)
    private static final cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff();
    }

    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TurnOff>
        PARSER = new com.google.protobuf.AbstractParser<TurnOff>() {
      @java.lang.Override
      public TurnOff parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<TurnOff> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TurnOff> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.TurnOff getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetMeteoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cmd.DayCamGlassHeater.GetMeteo)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code cmd.DayCamGlassHeater.GetMeteo}
   */
  public static final class GetMeteo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:cmd.DayCamGlassHeater.GetMeteo)
      GetMeteoOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 2,
        /* suffix= */ "",
        GetMeteo.class.getName());
    }
    // Use GetMeteo.newBuilder() to construct.
    private GetMeteo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private GetMeteo() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.internal_static_cmd_DayCamGlassHeater_GetMeteo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.internal_static_cmd_DayCamGlassHeater_GetMeteo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo.class, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo)) {
        return super.equals(obj);
      }
      cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo other = (cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo) obj;

      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code cmd.DayCamGlassHeater.GetMeteo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cmd.DayCamGlassHeater.GetMeteo)
        cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.internal_static_cmd_DayCamGlassHeater_GetMeteo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.internal_static_cmd_DayCamGlassHeater_GetMeteo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo.class, cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo.Builder.class);
      }

      // Construct using cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.internal_static_cmd_DayCamGlassHeater_GetMeteo_descriptor;
      }

      @java.lang.Override
      public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo getDefaultInstanceForType() {
        return cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo.getDefaultInstance();
      }

      @java.lang.Override
      public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo build() {
        cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo buildPartial() {
        cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo result = new cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo) {
          return mergeFrom((cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo other) {
        if (other == cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      // @@protoc_insertion_point(builder_scope:cmd.DayCamGlassHeater.GetMeteo)
    }

    // @@protoc_insertion_point(class_scope:cmd.DayCamGlassHeater.GetMeteo)
    private static final cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo();
    }

    public static cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetMeteo>
        PARSER = new com.google.protobuf.AbstractParser<GetMeteo>() {
      @java.lang.Override
      public GetMeteo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<GetMeteo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetMeteo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public cmd.DayCamGlassHeater.JonSharedCmdDayCamGlassHeater.GetMeteo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cmd_DayCamGlassHeater_Root_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_cmd_DayCamGlassHeater_Root_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cmd_DayCamGlassHeater_Start_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_cmd_DayCamGlassHeater_Start_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cmd_DayCamGlassHeater_Stop_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_cmd_DayCamGlassHeater_Stop_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cmd_DayCamGlassHeater_TurnOn_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_cmd_DayCamGlassHeater_TurnOn_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cmd_DayCamGlassHeater_TurnOff_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_cmd_DayCamGlassHeater_TurnOff_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cmd_DayCamGlassHeater_GetMeteo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_cmd_DayCamGlassHeater_GetMeteo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n)jon_shared_cmd_day_cam_glass_heater.pr" +
      "oto\022\025cmd.DayCamGlassHeater\032\033buf/validate" +
      "/validate.proto\"\214\002\n\004Root\022-\n\005start\030\001 \001(\0132" +
      "\034.cmd.DayCamGlassHeater.StartH\000\022+\n\004stop\030" +
      "\002 \001(\0132\033.cmd.DayCamGlassHeater.StopH\000\0220\n\007" +
      "turn_on\030\003 \001(\0132\035.cmd.DayCamGlassHeater.Tu" +
      "rnOnH\000\0222\n\010turn_off\030\004 \001(\0132\036.cmd.DayCamGla" +
      "ssHeater.TurnOffH\000\0224\n\tget_meteo\030\005 \001(\0132\037." +
      "cmd.DayCamGlassHeater.GetMeteoH\000B\014\n\003cmd\022" +
      "\005\272H\002\010\001\"\007\n\005Start\"\006\n\004Stop\"\010\n\006TurnOn\"\t\n\007Tur" +
      "nOff\"\n\n\010GetMeteoB[ZYgit-codecommit.eu-ce" +
      "ntral-1.amazonaws.com/v1/repos/jettison/" +
      "jonp/cmd/day_cam_glass_heaterb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          build.buf.validate.ValidateProto.getDescriptor(),
        });
    internal_static_cmd_DayCamGlassHeater_Root_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_cmd_DayCamGlassHeater_Root_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_cmd_DayCamGlassHeater_Root_descriptor,
        new java.lang.String[] { "Start", "Stop", "TurnOn", "TurnOff", "GetMeteo", "Cmd", });
    internal_static_cmd_DayCamGlassHeater_Start_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_cmd_DayCamGlassHeater_Start_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_cmd_DayCamGlassHeater_Start_descriptor,
        new java.lang.String[] { });
    internal_static_cmd_DayCamGlassHeater_Stop_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_cmd_DayCamGlassHeater_Stop_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_cmd_DayCamGlassHeater_Stop_descriptor,
        new java.lang.String[] { });
    internal_static_cmd_DayCamGlassHeater_TurnOn_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_cmd_DayCamGlassHeater_TurnOn_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_cmd_DayCamGlassHeater_TurnOn_descriptor,
        new java.lang.String[] { });
    internal_static_cmd_DayCamGlassHeater_TurnOff_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_cmd_DayCamGlassHeater_TurnOff_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_cmd_DayCamGlassHeater_TurnOff_descriptor,
        new java.lang.String[] { });
    internal_static_cmd_DayCamGlassHeater_GetMeteo_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_cmd_DayCamGlassHeater_GetMeteo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_cmd_DayCamGlassHeater_GetMeteo_descriptor,
        new java.lang.String[] { });
    descriptor.resolveAllFeaturesImmutable();
    build.buf.validate.ValidateProto.getDescriptor();
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(build.buf.validate.ValidateProto.oneof);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
