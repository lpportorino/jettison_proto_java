// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: jon_shared_data_rotary.proto
// Protobuf Java Version: 4.29.2

package ser;

public final class JonSharedDataRotary {
  private JonSharedDataRotary() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 2,
      /* suffix= */ "",
      JonSharedDataRotary.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface JonGuiDataRotaryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ser.JonGuiDataRotary)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>double azimuth = 1 [(.buf.validate.field) = { ... }</code>
     * @return The azimuth.
     */
    double getAzimuth();

    /**
     * <code>double azimuth_speed = 2 [(.buf.validate.field) = { ... }</code>
     * @return The azimuthSpeed.
     */
    double getAzimuthSpeed();

    /**
     * <code>double elevation = 3 [(.buf.validate.field) = { ... }</code>
     * @return The elevation.
     */
    double getElevation();

    /**
     * <code>double elevation_speed = 4 [(.buf.validate.field) = { ... }</code>
     * @return The elevationSpeed.
     */
    double getElevationSpeed();

    /**
     * <code>double platform_azimuth = 5 [(.buf.validate.field) = { ... }</code>
     * @return The platformAzimuth.
     */
    double getPlatformAzimuth();

    /**
     * <code>double platform_elevation = 6 [(.buf.validate.field) = { ... }</code>
     * @return The platformElevation.
     */
    double getPlatformElevation();

    /**
     * <code>double platform_bank = 7 [(.buf.validate.field) = { ... }</code>
     * @return The platformBank.
     */
    double getPlatformBank();

    /**
     * <code>bool is_moving = 8;</code>
     * @return The isMoving.
     */
    boolean getIsMoving();

    /**
     * <code>.ser.JonGuiDataRotaryMode mode = 9 [(.buf.validate.field) = { ... }</code>
     * @return The enum numeric value on the wire for mode.
     */
    int getModeValue();
    /**
     * <code>.ser.JonGuiDataRotaryMode mode = 9 [(.buf.validate.field) = { ... }</code>
     * @return The mode.
     */
    ser.JonSharedDataTypes.JonGuiDataRotaryMode getMode();

    /**
     * <code>bool is_scanning = 10;</code>
     * @return The isScanning.
     */
    boolean getIsScanning();

    /**
     * <code>bool is_scanning_paused = 11;</code>
     * @return The isScanningPaused.
     */
    boolean getIsScanningPaused();

    /**
     * <code>bool use_rotary_as_compass = 12;</code>
     * @return The useRotaryAsCompass.
     */
    boolean getUseRotaryAsCompass();

    /**
     * <code>int32 scan_target = 13 [(.buf.validate.field) = { ... }</code>
     * @return The scanTarget.
     */
    int getScanTarget();

    /**
     * <code>int32 scan_target_max = 14 [(.buf.validate.field) = { ... }</code>
     * @return The scanTargetMax.
     */
    int getScanTargetMax();

    /**
     * <code>double sun_azimuth = 15 [(.buf.validate.field) = { ... }</code>
     * @return The sunAzimuth.
     */
    double getSunAzimuth();

    /**
     * <code>double sun_elevation = 16 [(.buf.validate.field) = { ... }</code>
     * @return The sunElevation.
     */
    double getSunElevation();

    /**
     * <code>.ser.ScanNode current_scan_node = 17 [(.buf.validate.field) = { ... }</code>
     * @return Whether the currentScanNode field is set.
     */
    boolean hasCurrentScanNode();
    /**
     * <code>.ser.ScanNode current_scan_node = 17 [(.buf.validate.field) = { ... }</code>
     * @return The currentScanNode.
     */
    ser.JonSharedDataRotary.ScanNode getCurrentScanNode();
    /**
     * <code>.ser.ScanNode current_scan_node = 17 [(.buf.validate.field) = { ... }</code>
     */
    ser.JonSharedDataRotary.ScanNodeOrBuilder getCurrentScanNodeOrBuilder();
  }
  /**
   * Protobuf type {@code ser.JonGuiDataRotary}
   */
  public static final class JonGuiDataRotary extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ser.JonGuiDataRotary)
      JonGuiDataRotaryOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 2,
        /* suffix= */ "",
        JonGuiDataRotary.class.getName());
    }
    // Use JonGuiDataRotary.newBuilder() to construct.
    private JonGuiDataRotary(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private JonGuiDataRotary() {
      mode_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ser.JonSharedDataRotary.internal_static_ser_JonGuiDataRotary_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ser.JonSharedDataRotary.internal_static_ser_JonGuiDataRotary_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ser.JonSharedDataRotary.JonGuiDataRotary.class, ser.JonSharedDataRotary.JonGuiDataRotary.Builder.class);
    }

    private int bitField0_;
    public static final int AZIMUTH_FIELD_NUMBER = 1;
    private double azimuth_ = 0D;
    /**
     * <code>double azimuth = 1 [(.buf.validate.field) = { ... }</code>
     * @return The azimuth.
     */
    @java.lang.Override
    public double getAzimuth() {
      return azimuth_;
    }

    public static final int AZIMUTH_SPEED_FIELD_NUMBER = 2;
    private double azimuthSpeed_ = 0D;
    /**
     * <code>double azimuth_speed = 2 [(.buf.validate.field) = { ... }</code>
     * @return The azimuthSpeed.
     */
    @java.lang.Override
    public double getAzimuthSpeed() {
      return azimuthSpeed_;
    }

    public static final int ELEVATION_FIELD_NUMBER = 3;
    private double elevation_ = 0D;
    /**
     * <code>double elevation = 3 [(.buf.validate.field) = { ... }</code>
     * @return The elevation.
     */
    @java.lang.Override
    public double getElevation() {
      return elevation_;
    }

    public static final int ELEVATION_SPEED_FIELD_NUMBER = 4;
    private double elevationSpeed_ = 0D;
    /**
     * <code>double elevation_speed = 4 [(.buf.validate.field) = { ... }</code>
     * @return The elevationSpeed.
     */
    @java.lang.Override
    public double getElevationSpeed() {
      return elevationSpeed_;
    }

    public static final int PLATFORM_AZIMUTH_FIELD_NUMBER = 5;
    private double platformAzimuth_ = 0D;
    /**
     * <code>double platform_azimuth = 5 [(.buf.validate.field) = { ... }</code>
     * @return The platformAzimuth.
     */
    @java.lang.Override
    public double getPlatformAzimuth() {
      return platformAzimuth_;
    }

    public static final int PLATFORM_ELEVATION_FIELD_NUMBER = 6;
    private double platformElevation_ = 0D;
    /**
     * <code>double platform_elevation = 6 [(.buf.validate.field) = { ... }</code>
     * @return The platformElevation.
     */
    @java.lang.Override
    public double getPlatformElevation() {
      return platformElevation_;
    }

    public static final int PLATFORM_BANK_FIELD_NUMBER = 7;
    private double platformBank_ = 0D;
    /**
     * <code>double platform_bank = 7 [(.buf.validate.field) = { ... }</code>
     * @return The platformBank.
     */
    @java.lang.Override
    public double getPlatformBank() {
      return platformBank_;
    }

    public static final int IS_MOVING_FIELD_NUMBER = 8;
    private boolean isMoving_ = false;
    /**
     * <code>bool is_moving = 8;</code>
     * @return The isMoving.
     */
    @java.lang.Override
    public boolean getIsMoving() {
      return isMoving_;
    }

    public static final int MODE_FIELD_NUMBER = 9;
    private int mode_ = 0;
    /**
     * <code>.ser.JonGuiDataRotaryMode mode = 9 [(.buf.validate.field) = { ... }</code>
     * @return The enum numeric value on the wire for mode.
     */
    @java.lang.Override public int getModeValue() {
      return mode_;
    }
    /**
     * <code>.ser.JonGuiDataRotaryMode mode = 9 [(.buf.validate.field) = { ... }</code>
     * @return The mode.
     */
    @java.lang.Override public ser.JonSharedDataTypes.JonGuiDataRotaryMode getMode() {
      ser.JonSharedDataTypes.JonGuiDataRotaryMode result = ser.JonSharedDataTypes.JonGuiDataRotaryMode.forNumber(mode_);
      return result == null ? ser.JonSharedDataTypes.JonGuiDataRotaryMode.UNRECOGNIZED : result;
    }

    public static final int IS_SCANNING_FIELD_NUMBER = 10;
    private boolean isScanning_ = false;
    /**
     * <code>bool is_scanning = 10;</code>
     * @return The isScanning.
     */
    @java.lang.Override
    public boolean getIsScanning() {
      return isScanning_;
    }

    public static final int IS_SCANNING_PAUSED_FIELD_NUMBER = 11;
    private boolean isScanningPaused_ = false;
    /**
     * <code>bool is_scanning_paused = 11;</code>
     * @return The isScanningPaused.
     */
    @java.lang.Override
    public boolean getIsScanningPaused() {
      return isScanningPaused_;
    }

    public static final int USE_ROTARY_AS_COMPASS_FIELD_NUMBER = 12;
    private boolean useRotaryAsCompass_ = false;
    /**
     * <code>bool use_rotary_as_compass = 12;</code>
     * @return The useRotaryAsCompass.
     */
    @java.lang.Override
    public boolean getUseRotaryAsCompass() {
      return useRotaryAsCompass_;
    }

    public static final int SCAN_TARGET_FIELD_NUMBER = 13;
    private int scanTarget_ = 0;
    /**
     * <code>int32 scan_target = 13 [(.buf.validate.field) = { ... }</code>
     * @return The scanTarget.
     */
    @java.lang.Override
    public int getScanTarget() {
      return scanTarget_;
    }

    public static final int SCAN_TARGET_MAX_FIELD_NUMBER = 14;
    private int scanTargetMax_ = 0;
    /**
     * <code>int32 scan_target_max = 14 [(.buf.validate.field) = { ... }</code>
     * @return The scanTargetMax.
     */
    @java.lang.Override
    public int getScanTargetMax() {
      return scanTargetMax_;
    }

    public static final int SUN_AZIMUTH_FIELD_NUMBER = 15;
    private double sunAzimuth_ = 0D;
    /**
     * <code>double sun_azimuth = 15 [(.buf.validate.field) = { ... }</code>
     * @return The sunAzimuth.
     */
    @java.lang.Override
    public double getSunAzimuth() {
      return sunAzimuth_;
    }

    public static final int SUN_ELEVATION_FIELD_NUMBER = 16;
    private double sunElevation_ = 0D;
    /**
     * <code>double sun_elevation = 16 [(.buf.validate.field) = { ... }</code>
     * @return The sunElevation.
     */
    @java.lang.Override
    public double getSunElevation() {
      return sunElevation_;
    }

    public static final int CURRENT_SCAN_NODE_FIELD_NUMBER = 17;
    private ser.JonSharedDataRotary.ScanNode currentScanNode_;
    /**
     * <code>.ser.ScanNode current_scan_node = 17 [(.buf.validate.field) = { ... }</code>
     * @return Whether the currentScanNode field is set.
     */
    @java.lang.Override
    public boolean hasCurrentScanNode() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.ser.ScanNode current_scan_node = 17 [(.buf.validate.field) = { ... }</code>
     * @return The currentScanNode.
     */
    @java.lang.Override
    public ser.JonSharedDataRotary.ScanNode getCurrentScanNode() {
      return currentScanNode_ == null ? ser.JonSharedDataRotary.ScanNode.getDefaultInstance() : currentScanNode_;
    }
    /**
     * <code>.ser.ScanNode current_scan_node = 17 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public ser.JonSharedDataRotary.ScanNodeOrBuilder getCurrentScanNodeOrBuilder() {
      return currentScanNode_ == null ? ser.JonSharedDataRotary.ScanNode.getDefaultInstance() : currentScanNode_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (java.lang.Double.doubleToRawLongBits(azimuth_) != 0) {
        output.writeDouble(1, azimuth_);
      }
      if (java.lang.Double.doubleToRawLongBits(azimuthSpeed_) != 0) {
        output.writeDouble(2, azimuthSpeed_);
      }
      if (java.lang.Double.doubleToRawLongBits(elevation_) != 0) {
        output.writeDouble(3, elevation_);
      }
      if (java.lang.Double.doubleToRawLongBits(elevationSpeed_) != 0) {
        output.writeDouble(4, elevationSpeed_);
      }
      if (java.lang.Double.doubleToRawLongBits(platformAzimuth_) != 0) {
        output.writeDouble(5, platformAzimuth_);
      }
      if (java.lang.Double.doubleToRawLongBits(platformElevation_) != 0) {
        output.writeDouble(6, platformElevation_);
      }
      if (java.lang.Double.doubleToRawLongBits(platformBank_) != 0) {
        output.writeDouble(7, platformBank_);
      }
      if (isMoving_ != false) {
        output.writeBool(8, isMoving_);
      }
      if (mode_ != ser.JonSharedDataTypes.JonGuiDataRotaryMode.JON_GUI_DATA_ROTARY_MODE_UNSPECIFIED.getNumber()) {
        output.writeEnum(9, mode_);
      }
      if (isScanning_ != false) {
        output.writeBool(10, isScanning_);
      }
      if (isScanningPaused_ != false) {
        output.writeBool(11, isScanningPaused_);
      }
      if (useRotaryAsCompass_ != false) {
        output.writeBool(12, useRotaryAsCompass_);
      }
      if (scanTarget_ != 0) {
        output.writeInt32(13, scanTarget_);
      }
      if (scanTargetMax_ != 0) {
        output.writeInt32(14, scanTargetMax_);
      }
      if (java.lang.Double.doubleToRawLongBits(sunAzimuth_) != 0) {
        output.writeDouble(15, sunAzimuth_);
      }
      if (java.lang.Double.doubleToRawLongBits(sunElevation_) != 0) {
        output.writeDouble(16, sunElevation_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(17, getCurrentScanNode());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (java.lang.Double.doubleToRawLongBits(azimuth_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, azimuth_);
      }
      if (java.lang.Double.doubleToRawLongBits(azimuthSpeed_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, azimuthSpeed_);
      }
      if (java.lang.Double.doubleToRawLongBits(elevation_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, elevation_);
      }
      if (java.lang.Double.doubleToRawLongBits(elevationSpeed_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, elevationSpeed_);
      }
      if (java.lang.Double.doubleToRawLongBits(platformAzimuth_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, platformAzimuth_);
      }
      if (java.lang.Double.doubleToRawLongBits(platformElevation_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, platformElevation_);
      }
      if (java.lang.Double.doubleToRawLongBits(platformBank_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, platformBank_);
      }
      if (isMoving_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, isMoving_);
      }
      if (mode_ != ser.JonSharedDataTypes.JonGuiDataRotaryMode.JON_GUI_DATA_ROTARY_MODE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, mode_);
      }
      if (isScanning_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, isScanning_);
      }
      if (isScanningPaused_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, isScanningPaused_);
      }
      if (useRotaryAsCompass_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, useRotaryAsCompass_);
      }
      if (scanTarget_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, scanTarget_);
      }
      if (scanTargetMax_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, scanTargetMax_);
      }
      if (java.lang.Double.doubleToRawLongBits(sunAzimuth_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(15, sunAzimuth_);
      }
      if (java.lang.Double.doubleToRawLongBits(sunElevation_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(16, sunElevation_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, getCurrentScanNode());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ser.JonSharedDataRotary.JonGuiDataRotary)) {
        return super.equals(obj);
      }
      ser.JonSharedDataRotary.JonGuiDataRotary other = (ser.JonSharedDataRotary.JonGuiDataRotary) obj;

      if (java.lang.Double.doubleToLongBits(getAzimuth())
          != java.lang.Double.doubleToLongBits(
              other.getAzimuth())) return false;
      if (java.lang.Double.doubleToLongBits(getAzimuthSpeed())
          != java.lang.Double.doubleToLongBits(
              other.getAzimuthSpeed())) return false;
      if (java.lang.Double.doubleToLongBits(getElevation())
          != java.lang.Double.doubleToLongBits(
              other.getElevation())) return false;
      if (java.lang.Double.doubleToLongBits(getElevationSpeed())
          != java.lang.Double.doubleToLongBits(
              other.getElevationSpeed())) return false;
      if (java.lang.Double.doubleToLongBits(getPlatformAzimuth())
          != java.lang.Double.doubleToLongBits(
              other.getPlatformAzimuth())) return false;
      if (java.lang.Double.doubleToLongBits(getPlatformElevation())
          != java.lang.Double.doubleToLongBits(
              other.getPlatformElevation())) return false;
      if (java.lang.Double.doubleToLongBits(getPlatformBank())
          != java.lang.Double.doubleToLongBits(
              other.getPlatformBank())) return false;
      if (getIsMoving()
          != other.getIsMoving()) return false;
      if (mode_ != other.mode_) return false;
      if (getIsScanning()
          != other.getIsScanning()) return false;
      if (getIsScanningPaused()
          != other.getIsScanningPaused()) return false;
      if (getUseRotaryAsCompass()
          != other.getUseRotaryAsCompass()) return false;
      if (getScanTarget()
          != other.getScanTarget()) return false;
      if (getScanTargetMax()
          != other.getScanTargetMax()) return false;
      if (java.lang.Double.doubleToLongBits(getSunAzimuth())
          != java.lang.Double.doubleToLongBits(
              other.getSunAzimuth())) return false;
      if (java.lang.Double.doubleToLongBits(getSunElevation())
          != java.lang.Double.doubleToLongBits(
              other.getSunElevation())) return false;
      if (hasCurrentScanNode() != other.hasCurrentScanNode()) return false;
      if (hasCurrentScanNode()) {
        if (!getCurrentScanNode()
            .equals(other.getCurrentScanNode())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + AZIMUTH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAzimuth()));
      hash = (37 * hash) + AZIMUTH_SPEED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAzimuthSpeed()));
      hash = (37 * hash) + ELEVATION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getElevation()));
      hash = (37 * hash) + ELEVATION_SPEED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getElevationSpeed()));
      hash = (37 * hash) + PLATFORM_AZIMUTH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPlatformAzimuth()));
      hash = (37 * hash) + PLATFORM_ELEVATION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPlatformElevation()));
      hash = (37 * hash) + PLATFORM_BANK_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPlatformBank()));
      hash = (37 * hash) + IS_MOVING_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsMoving());
      hash = (37 * hash) + MODE_FIELD_NUMBER;
      hash = (53 * hash) + mode_;
      hash = (37 * hash) + IS_SCANNING_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsScanning());
      hash = (37 * hash) + IS_SCANNING_PAUSED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsScanningPaused());
      hash = (37 * hash) + USE_ROTARY_AS_COMPASS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getUseRotaryAsCompass());
      hash = (37 * hash) + SCAN_TARGET_FIELD_NUMBER;
      hash = (53 * hash) + getScanTarget();
      hash = (37 * hash) + SCAN_TARGET_MAX_FIELD_NUMBER;
      hash = (53 * hash) + getScanTargetMax();
      hash = (37 * hash) + SUN_AZIMUTH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getSunAzimuth()));
      hash = (37 * hash) + SUN_ELEVATION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getSunElevation()));
      if (hasCurrentScanNode()) {
        hash = (37 * hash) + CURRENT_SCAN_NODE_FIELD_NUMBER;
        hash = (53 * hash) + getCurrentScanNode().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ser.JonSharedDataRotary.JonGuiDataRotary parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ser.JonSharedDataRotary.JonGuiDataRotary parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ser.JonSharedDataRotary.JonGuiDataRotary parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ser.JonSharedDataRotary.JonGuiDataRotary parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ser.JonSharedDataRotary.JonGuiDataRotary parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ser.JonSharedDataRotary.JonGuiDataRotary parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ser.JonSharedDataRotary.JonGuiDataRotary parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ser.JonSharedDataRotary.JonGuiDataRotary parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static ser.JonSharedDataRotary.JonGuiDataRotary parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static ser.JonSharedDataRotary.JonGuiDataRotary parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ser.JonSharedDataRotary.JonGuiDataRotary parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ser.JonSharedDataRotary.JonGuiDataRotary parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ser.JonSharedDataRotary.JonGuiDataRotary prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ser.JonGuiDataRotary}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ser.JonGuiDataRotary)
        ser.JonSharedDataRotary.JonGuiDataRotaryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ser.JonSharedDataRotary.internal_static_ser_JonGuiDataRotary_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ser.JonSharedDataRotary.internal_static_ser_JonGuiDataRotary_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ser.JonSharedDataRotary.JonGuiDataRotary.class, ser.JonSharedDataRotary.JonGuiDataRotary.Builder.class);
      }

      // Construct using ser.JonSharedDataRotary.JonGuiDataRotary.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getCurrentScanNodeFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        azimuth_ = 0D;
        azimuthSpeed_ = 0D;
        elevation_ = 0D;
        elevationSpeed_ = 0D;
        platformAzimuth_ = 0D;
        platformElevation_ = 0D;
        platformBank_ = 0D;
        isMoving_ = false;
        mode_ = 0;
        isScanning_ = false;
        isScanningPaused_ = false;
        useRotaryAsCompass_ = false;
        scanTarget_ = 0;
        scanTargetMax_ = 0;
        sunAzimuth_ = 0D;
        sunElevation_ = 0D;
        currentScanNode_ = null;
        if (currentScanNodeBuilder_ != null) {
          currentScanNodeBuilder_.dispose();
          currentScanNodeBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ser.JonSharedDataRotary.internal_static_ser_JonGuiDataRotary_descriptor;
      }

      @java.lang.Override
      public ser.JonSharedDataRotary.JonGuiDataRotary getDefaultInstanceForType() {
        return ser.JonSharedDataRotary.JonGuiDataRotary.getDefaultInstance();
      }

      @java.lang.Override
      public ser.JonSharedDataRotary.JonGuiDataRotary build() {
        ser.JonSharedDataRotary.JonGuiDataRotary result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public ser.JonSharedDataRotary.JonGuiDataRotary buildPartial() {
        ser.JonSharedDataRotary.JonGuiDataRotary result = new ser.JonSharedDataRotary.JonGuiDataRotary(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(ser.JonSharedDataRotary.JonGuiDataRotary result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.azimuth_ = azimuth_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.azimuthSpeed_ = azimuthSpeed_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.elevation_ = elevation_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.elevationSpeed_ = elevationSpeed_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.platformAzimuth_ = platformAzimuth_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.platformElevation_ = platformElevation_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.platformBank_ = platformBank_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.isMoving_ = isMoving_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.mode_ = mode_;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.isScanning_ = isScanning_;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.isScanningPaused_ = isScanningPaused_;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.useRotaryAsCompass_ = useRotaryAsCompass_;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.scanTarget_ = scanTarget_;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.scanTargetMax_ = scanTargetMax_;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.sunAzimuth_ = sunAzimuth_;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.sunElevation_ = sunElevation_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00010000) != 0)) {
          result.currentScanNode_ = currentScanNodeBuilder_ == null
              ? currentScanNode_
              : currentScanNodeBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ser.JonSharedDataRotary.JonGuiDataRotary) {
          return mergeFrom((ser.JonSharedDataRotary.JonGuiDataRotary)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ser.JonSharedDataRotary.JonGuiDataRotary other) {
        if (other == ser.JonSharedDataRotary.JonGuiDataRotary.getDefaultInstance()) return this;
        if (other.getAzimuth() != 0D) {
          setAzimuth(other.getAzimuth());
        }
        if (other.getAzimuthSpeed() != 0D) {
          setAzimuthSpeed(other.getAzimuthSpeed());
        }
        if (other.getElevation() != 0D) {
          setElevation(other.getElevation());
        }
        if (other.getElevationSpeed() != 0D) {
          setElevationSpeed(other.getElevationSpeed());
        }
        if (other.getPlatformAzimuth() != 0D) {
          setPlatformAzimuth(other.getPlatformAzimuth());
        }
        if (other.getPlatformElevation() != 0D) {
          setPlatformElevation(other.getPlatformElevation());
        }
        if (other.getPlatformBank() != 0D) {
          setPlatformBank(other.getPlatformBank());
        }
        if (other.getIsMoving() != false) {
          setIsMoving(other.getIsMoving());
        }
        if (other.mode_ != 0) {
          setModeValue(other.getModeValue());
        }
        if (other.getIsScanning() != false) {
          setIsScanning(other.getIsScanning());
        }
        if (other.getIsScanningPaused() != false) {
          setIsScanningPaused(other.getIsScanningPaused());
        }
        if (other.getUseRotaryAsCompass() != false) {
          setUseRotaryAsCompass(other.getUseRotaryAsCompass());
        }
        if (other.getScanTarget() != 0) {
          setScanTarget(other.getScanTarget());
        }
        if (other.getScanTargetMax() != 0) {
          setScanTargetMax(other.getScanTargetMax());
        }
        if (other.getSunAzimuth() != 0D) {
          setSunAzimuth(other.getSunAzimuth());
        }
        if (other.getSunElevation() != 0D) {
          setSunElevation(other.getSunElevation());
        }
        if (other.hasCurrentScanNode()) {
          mergeCurrentScanNode(other.getCurrentScanNode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {
                azimuth_ = input.readDouble();
                bitField0_ |= 0x00000001;
                break;
              } // case 9
              case 17: {
                azimuthSpeed_ = input.readDouble();
                bitField0_ |= 0x00000002;
                break;
              } // case 17
              case 25: {
                elevation_ = input.readDouble();
                bitField0_ |= 0x00000004;
                break;
              } // case 25
              case 33: {
                elevationSpeed_ = input.readDouble();
                bitField0_ |= 0x00000008;
                break;
              } // case 33
              case 41: {
                platformAzimuth_ = input.readDouble();
                bitField0_ |= 0x00000010;
                break;
              } // case 41
              case 49: {
                platformElevation_ = input.readDouble();
                bitField0_ |= 0x00000020;
                break;
              } // case 49
              case 57: {
                platformBank_ = input.readDouble();
                bitField0_ |= 0x00000040;
                break;
              } // case 57
              case 64: {
                isMoving_ = input.readBool();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 72: {
                mode_ = input.readEnum();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              case 80: {
                isScanning_ = input.readBool();
                bitField0_ |= 0x00000200;
                break;
              } // case 80
              case 88: {
                isScanningPaused_ = input.readBool();
                bitField0_ |= 0x00000400;
                break;
              } // case 88
              case 96: {
                useRotaryAsCompass_ = input.readBool();
                bitField0_ |= 0x00000800;
                break;
              } // case 96
              case 104: {
                scanTarget_ = input.readInt32();
                bitField0_ |= 0x00001000;
                break;
              } // case 104
              case 112: {
                scanTargetMax_ = input.readInt32();
                bitField0_ |= 0x00002000;
                break;
              } // case 112
              case 121: {
                sunAzimuth_ = input.readDouble();
                bitField0_ |= 0x00004000;
                break;
              } // case 121
              case 129: {
                sunElevation_ = input.readDouble();
                bitField0_ |= 0x00008000;
                break;
              } // case 129
              case 138: {
                input.readMessage(
                    getCurrentScanNodeFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00010000;
                break;
              } // case 138
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private double azimuth_ ;
      /**
       * <code>double azimuth = 1 [(.buf.validate.field) = { ... }</code>
       * @return The azimuth.
       */
      @java.lang.Override
      public double getAzimuth() {
        return azimuth_;
      }
      /**
       * <code>double azimuth = 1 [(.buf.validate.field) = { ... }</code>
       * @param value The azimuth to set.
       * @return This builder for chaining.
       */
      public Builder setAzimuth(double value) {

        azimuth_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>double azimuth = 1 [(.buf.validate.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearAzimuth() {
        bitField0_ = (bitField0_ & ~0x00000001);
        azimuth_ = 0D;
        onChanged();
        return this;
      }

      private double azimuthSpeed_ ;
      /**
       * <code>double azimuth_speed = 2 [(.buf.validate.field) = { ... }</code>
       * @return The azimuthSpeed.
       */
      @java.lang.Override
      public double getAzimuthSpeed() {
        return azimuthSpeed_;
      }
      /**
       * <code>double azimuth_speed = 2 [(.buf.validate.field) = { ... }</code>
       * @param value The azimuthSpeed to set.
       * @return This builder for chaining.
       */
      public Builder setAzimuthSpeed(double value) {

        azimuthSpeed_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>double azimuth_speed = 2 [(.buf.validate.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearAzimuthSpeed() {
        bitField0_ = (bitField0_ & ~0x00000002);
        azimuthSpeed_ = 0D;
        onChanged();
        return this;
      }

      private double elevation_ ;
      /**
       * <code>double elevation = 3 [(.buf.validate.field) = { ... }</code>
       * @return The elevation.
       */
      @java.lang.Override
      public double getElevation() {
        return elevation_;
      }
      /**
       * <code>double elevation = 3 [(.buf.validate.field) = { ... }</code>
       * @param value The elevation to set.
       * @return This builder for chaining.
       */
      public Builder setElevation(double value) {

        elevation_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>double elevation = 3 [(.buf.validate.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearElevation() {
        bitField0_ = (bitField0_ & ~0x00000004);
        elevation_ = 0D;
        onChanged();
        return this;
      }

      private double elevationSpeed_ ;
      /**
       * <code>double elevation_speed = 4 [(.buf.validate.field) = { ... }</code>
       * @return The elevationSpeed.
       */
      @java.lang.Override
      public double getElevationSpeed() {
        return elevationSpeed_;
      }
      /**
       * <code>double elevation_speed = 4 [(.buf.validate.field) = { ... }</code>
       * @param value The elevationSpeed to set.
       * @return This builder for chaining.
       */
      public Builder setElevationSpeed(double value) {

        elevationSpeed_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>double elevation_speed = 4 [(.buf.validate.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearElevationSpeed() {
        bitField0_ = (bitField0_ & ~0x00000008);
        elevationSpeed_ = 0D;
        onChanged();
        return this;
      }

      private double platformAzimuth_ ;
      /**
       * <code>double platform_azimuth = 5 [(.buf.validate.field) = { ... }</code>
       * @return The platformAzimuth.
       */
      @java.lang.Override
      public double getPlatformAzimuth() {
        return platformAzimuth_;
      }
      /**
       * <code>double platform_azimuth = 5 [(.buf.validate.field) = { ... }</code>
       * @param value The platformAzimuth to set.
       * @return This builder for chaining.
       */
      public Builder setPlatformAzimuth(double value) {

        platformAzimuth_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>double platform_azimuth = 5 [(.buf.validate.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearPlatformAzimuth() {
        bitField0_ = (bitField0_ & ~0x00000010);
        platformAzimuth_ = 0D;
        onChanged();
        return this;
      }

      private double platformElevation_ ;
      /**
       * <code>double platform_elevation = 6 [(.buf.validate.field) = { ... }</code>
       * @return The platformElevation.
       */
      @java.lang.Override
      public double getPlatformElevation() {
        return platformElevation_;
      }
      /**
       * <code>double platform_elevation = 6 [(.buf.validate.field) = { ... }</code>
       * @param value The platformElevation to set.
       * @return This builder for chaining.
       */
      public Builder setPlatformElevation(double value) {

        platformElevation_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>double platform_elevation = 6 [(.buf.validate.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearPlatformElevation() {
        bitField0_ = (bitField0_ & ~0x00000020);
        platformElevation_ = 0D;
        onChanged();
        return this;
      }

      private double platformBank_ ;
      /**
       * <code>double platform_bank = 7 [(.buf.validate.field) = { ... }</code>
       * @return The platformBank.
       */
      @java.lang.Override
      public double getPlatformBank() {
        return platformBank_;
      }
      /**
       * <code>double platform_bank = 7 [(.buf.validate.field) = { ... }</code>
       * @param value The platformBank to set.
       * @return This builder for chaining.
       */
      public Builder setPlatformBank(double value) {

        platformBank_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>double platform_bank = 7 [(.buf.validate.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearPlatformBank() {
        bitField0_ = (bitField0_ & ~0x00000040);
        platformBank_ = 0D;
        onChanged();
        return this;
      }

      private boolean isMoving_ ;
      /**
       * <code>bool is_moving = 8;</code>
       * @return The isMoving.
       */
      @java.lang.Override
      public boolean getIsMoving() {
        return isMoving_;
      }
      /**
       * <code>bool is_moving = 8;</code>
       * @param value The isMoving to set.
       * @return This builder for chaining.
       */
      public Builder setIsMoving(boolean value) {

        isMoving_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>bool is_moving = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsMoving() {
        bitField0_ = (bitField0_ & ~0x00000080);
        isMoving_ = false;
        onChanged();
        return this;
      }

      private int mode_ = 0;
      /**
       * <code>.ser.JonGuiDataRotaryMode mode = 9 [(.buf.validate.field) = { ... }</code>
       * @return The enum numeric value on the wire for mode.
       */
      @java.lang.Override public int getModeValue() {
        return mode_;
      }
      /**
       * <code>.ser.JonGuiDataRotaryMode mode = 9 [(.buf.validate.field) = { ... }</code>
       * @param value The enum numeric value on the wire for mode to set.
       * @return This builder for chaining.
       */
      public Builder setModeValue(int value) {
        mode_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>.ser.JonGuiDataRotaryMode mode = 9 [(.buf.validate.field) = { ... }</code>
       * @return The mode.
       */
      @java.lang.Override
      public ser.JonSharedDataTypes.JonGuiDataRotaryMode getMode() {
        ser.JonSharedDataTypes.JonGuiDataRotaryMode result = ser.JonSharedDataTypes.JonGuiDataRotaryMode.forNumber(mode_);
        return result == null ? ser.JonSharedDataTypes.JonGuiDataRotaryMode.UNRECOGNIZED : result;
      }
      /**
       * <code>.ser.JonGuiDataRotaryMode mode = 9 [(.buf.validate.field) = { ... }</code>
       * @param value The mode to set.
       * @return This builder for chaining.
       */
      public Builder setMode(ser.JonSharedDataTypes.JonGuiDataRotaryMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000100;
        mode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.ser.JonGuiDataRotaryMode mode = 9 [(.buf.validate.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearMode() {
        bitField0_ = (bitField0_ & ~0x00000100);
        mode_ = 0;
        onChanged();
        return this;
      }

      private boolean isScanning_ ;
      /**
       * <code>bool is_scanning = 10;</code>
       * @return The isScanning.
       */
      @java.lang.Override
      public boolean getIsScanning() {
        return isScanning_;
      }
      /**
       * <code>bool is_scanning = 10;</code>
       * @param value The isScanning to set.
       * @return This builder for chaining.
       */
      public Builder setIsScanning(boolean value) {

        isScanning_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>bool is_scanning = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsScanning() {
        bitField0_ = (bitField0_ & ~0x00000200);
        isScanning_ = false;
        onChanged();
        return this;
      }

      private boolean isScanningPaused_ ;
      /**
       * <code>bool is_scanning_paused = 11;</code>
       * @return The isScanningPaused.
       */
      @java.lang.Override
      public boolean getIsScanningPaused() {
        return isScanningPaused_;
      }
      /**
       * <code>bool is_scanning_paused = 11;</code>
       * @param value The isScanningPaused to set.
       * @return This builder for chaining.
       */
      public Builder setIsScanningPaused(boolean value) {

        isScanningPaused_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>bool is_scanning_paused = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsScanningPaused() {
        bitField0_ = (bitField0_ & ~0x00000400);
        isScanningPaused_ = false;
        onChanged();
        return this;
      }

      private boolean useRotaryAsCompass_ ;
      /**
       * <code>bool use_rotary_as_compass = 12;</code>
       * @return The useRotaryAsCompass.
       */
      @java.lang.Override
      public boolean getUseRotaryAsCompass() {
        return useRotaryAsCompass_;
      }
      /**
       * <code>bool use_rotary_as_compass = 12;</code>
       * @param value The useRotaryAsCompass to set.
       * @return This builder for chaining.
       */
      public Builder setUseRotaryAsCompass(boolean value) {

        useRotaryAsCompass_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <code>bool use_rotary_as_compass = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearUseRotaryAsCompass() {
        bitField0_ = (bitField0_ & ~0x00000800);
        useRotaryAsCompass_ = false;
        onChanged();
        return this;
      }

      private int scanTarget_ ;
      /**
       * <code>int32 scan_target = 13 [(.buf.validate.field) = { ... }</code>
       * @return The scanTarget.
       */
      @java.lang.Override
      public int getScanTarget() {
        return scanTarget_;
      }
      /**
       * <code>int32 scan_target = 13 [(.buf.validate.field) = { ... }</code>
       * @param value The scanTarget to set.
       * @return This builder for chaining.
       */
      public Builder setScanTarget(int value) {

        scanTarget_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <code>int32 scan_target = 13 [(.buf.validate.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearScanTarget() {
        bitField0_ = (bitField0_ & ~0x00001000);
        scanTarget_ = 0;
        onChanged();
        return this;
      }

      private int scanTargetMax_ ;
      /**
       * <code>int32 scan_target_max = 14 [(.buf.validate.field) = { ... }</code>
       * @return The scanTargetMax.
       */
      @java.lang.Override
      public int getScanTargetMax() {
        return scanTargetMax_;
      }
      /**
       * <code>int32 scan_target_max = 14 [(.buf.validate.field) = { ... }</code>
       * @param value The scanTargetMax to set.
       * @return This builder for chaining.
       */
      public Builder setScanTargetMax(int value) {

        scanTargetMax_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <code>int32 scan_target_max = 14 [(.buf.validate.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearScanTargetMax() {
        bitField0_ = (bitField0_ & ~0x00002000);
        scanTargetMax_ = 0;
        onChanged();
        return this;
      }

      private double sunAzimuth_ ;
      /**
       * <code>double sun_azimuth = 15 [(.buf.validate.field) = { ... }</code>
       * @return The sunAzimuth.
       */
      @java.lang.Override
      public double getSunAzimuth() {
        return sunAzimuth_;
      }
      /**
       * <code>double sun_azimuth = 15 [(.buf.validate.field) = { ... }</code>
       * @param value The sunAzimuth to set.
       * @return This builder for chaining.
       */
      public Builder setSunAzimuth(double value) {

        sunAzimuth_ = value;
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <code>double sun_azimuth = 15 [(.buf.validate.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearSunAzimuth() {
        bitField0_ = (bitField0_ & ~0x00004000);
        sunAzimuth_ = 0D;
        onChanged();
        return this;
      }

      private double sunElevation_ ;
      /**
       * <code>double sun_elevation = 16 [(.buf.validate.field) = { ... }</code>
       * @return The sunElevation.
       */
      @java.lang.Override
      public double getSunElevation() {
        return sunElevation_;
      }
      /**
       * <code>double sun_elevation = 16 [(.buf.validate.field) = { ... }</code>
       * @param value The sunElevation to set.
       * @return This builder for chaining.
       */
      public Builder setSunElevation(double value) {

        sunElevation_ = value;
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <code>double sun_elevation = 16 [(.buf.validate.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearSunElevation() {
        bitField0_ = (bitField0_ & ~0x00008000);
        sunElevation_ = 0D;
        onChanged();
        return this;
      }

      private ser.JonSharedDataRotary.ScanNode currentScanNode_;
      private com.google.protobuf.SingleFieldBuilder<
          ser.JonSharedDataRotary.ScanNode, ser.JonSharedDataRotary.ScanNode.Builder, ser.JonSharedDataRotary.ScanNodeOrBuilder> currentScanNodeBuilder_;
      /**
       * <code>.ser.ScanNode current_scan_node = 17 [(.buf.validate.field) = { ... }</code>
       * @return Whether the currentScanNode field is set.
       */
      public boolean hasCurrentScanNode() {
        return ((bitField0_ & 0x00010000) != 0);
      }
      /**
       * <code>.ser.ScanNode current_scan_node = 17 [(.buf.validate.field) = { ... }</code>
       * @return The currentScanNode.
       */
      public ser.JonSharedDataRotary.ScanNode getCurrentScanNode() {
        if (currentScanNodeBuilder_ == null) {
          return currentScanNode_ == null ? ser.JonSharedDataRotary.ScanNode.getDefaultInstance() : currentScanNode_;
        } else {
          return currentScanNodeBuilder_.getMessage();
        }
      }
      /**
       * <code>.ser.ScanNode current_scan_node = 17 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setCurrentScanNode(ser.JonSharedDataRotary.ScanNode value) {
        if (currentScanNodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          currentScanNode_ = value;
        } else {
          currentScanNodeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00010000;
        onChanged();
        return this;
      }
      /**
       * <code>.ser.ScanNode current_scan_node = 17 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setCurrentScanNode(
          ser.JonSharedDataRotary.ScanNode.Builder builderForValue) {
        if (currentScanNodeBuilder_ == null) {
          currentScanNode_ = builderForValue.build();
        } else {
          currentScanNodeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00010000;
        onChanged();
        return this;
      }
      /**
       * <code>.ser.ScanNode current_scan_node = 17 [(.buf.validate.field) = { ... }</code>
       */
      public Builder mergeCurrentScanNode(ser.JonSharedDataRotary.ScanNode value) {
        if (currentScanNodeBuilder_ == null) {
          if (((bitField0_ & 0x00010000) != 0) &&
            currentScanNode_ != null &&
            currentScanNode_ != ser.JonSharedDataRotary.ScanNode.getDefaultInstance()) {
            getCurrentScanNodeBuilder().mergeFrom(value);
          } else {
            currentScanNode_ = value;
          }
        } else {
          currentScanNodeBuilder_.mergeFrom(value);
        }
        if (currentScanNode_ != null) {
          bitField0_ |= 0x00010000;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.ser.ScanNode current_scan_node = 17 [(.buf.validate.field) = { ... }</code>
       */
      public Builder clearCurrentScanNode() {
        bitField0_ = (bitField0_ & ~0x00010000);
        currentScanNode_ = null;
        if (currentScanNodeBuilder_ != null) {
          currentScanNodeBuilder_.dispose();
          currentScanNodeBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.ser.ScanNode current_scan_node = 17 [(.buf.validate.field) = { ... }</code>
       */
      public ser.JonSharedDataRotary.ScanNode.Builder getCurrentScanNodeBuilder() {
        bitField0_ |= 0x00010000;
        onChanged();
        return getCurrentScanNodeFieldBuilder().getBuilder();
      }
      /**
       * <code>.ser.ScanNode current_scan_node = 17 [(.buf.validate.field) = { ... }</code>
       */
      public ser.JonSharedDataRotary.ScanNodeOrBuilder getCurrentScanNodeOrBuilder() {
        if (currentScanNodeBuilder_ != null) {
          return currentScanNodeBuilder_.getMessageOrBuilder();
        } else {
          return currentScanNode_ == null ?
              ser.JonSharedDataRotary.ScanNode.getDefaultInstance() : currentScanNode_;
        }
      }
      /**
       * <code>.ser.ScanNode current_scan_node = 17 [(.buf.validate.field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ser.JonSharedDataRotary.ScanNode, ser.JonSharedDataRotary.ScanNode.Builder, ser.JonSharedDataRotary.ScanNodeOrBuilder> 
          getCurrentScanNodeFieldBuilder() {
        if (currentScanNodeBuilder_ == null) {
          currentScanNodeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ser.JonSharedDataRotary.ScanNode, ser.JonSharedDataRotary.ScanNode.Builder, ser.JonSharedDataRotary.ScanNodeOrBuilder>(
                  getCurrentScanNode(),
                  getParentForChildren(),
                  isClean());
          currentScanNode_ = null;
        }
        return currentScanNodeBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:ser.JonGuiDataRotary)
    }

    // @@protoc_insertion_point(class_scope:ser.JonGuiDataRotary)
    private static final ser.JonSharedDataRotary.JonGuiDataRotary DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ser.JonSharedDataRotary.JonGuiDataRotary();
    }

    public static ser.JonSharedDataRotary.JonGuiDataRotary getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<JonGuiDataRotary>
        PARSER = new com.google.protobuf.AbstractParser<JonGuiDataRotary>() {
      @java.lang.Override
      public JonGuiDataRotary parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<JonGuiDataRotary> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<JonGuiDataRotary> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public ser.JonSharedDataRotary.JonGuiDataRotary getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ScanNodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ser.ScanNode)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 index = 1 [(.buf.validate.field) = { ... }</code>
     * @return The index.
     */
    int getIndex();

    /**
     * <code>int32 DayZoomTableValue = 2 [(.buf.validate.field) = { ... }</code>
     * @return The dayZoomTableValue.
     */
    int getDayZoomTableValue();

    /**
     * <code>int32 HeatZoomTableValue = 3 [(.buf.validate.field) = { ... }</code>
     * @return The heatZoomTableValue.
     */
    int getHeatZoomTableValue();

    /**
     * <code>double azimuth = 4 [(.buf.validate.field) = { ... }</code>
     * @return The azimuth.
     */
    double getAzimuth();

    /**
     * <code>double elevation = 5 [(.buf.validate.field) = { ... }</code>
     * @return The elevation.
     */
    double getElevation();

    /**
     * <code>double linger = 6 [(.buf.validate.field) = { ... }</code>
     * @return The linger.
     */
    double getLinger();

    /**
     * <code>double speed = 7 [(.buf.validate.field) = { ... }</code>
     * @return The speed.
     */
    double getSpeed();
  }
  /**
   * Protobuf type {@code ser.ScanNode}
   */
  public static final class ScanNode extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ser.ScanNode)
      ScanNodeOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 2,
        /* suffix= */ "",
        ScanNode.class.getName());
    }
    // Use ScanNode.newBuilder() to construct.
    private ScanNode(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ScanNode() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ser.JonSharedDataRotary.internal_static_ser_ScanNode_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ser.JonSharedDataRotary.internal_static_ser_ScanNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ser.JonSharedDataRotary.ScanNode.class, ser.JonSharedDataRotary.ScanNode.Builder.class);
    }

    public static final int INDEX_FIELD_NUMBER = 1;
    private int index_ = 0;
    /**
     * <code>int32 index = 1 [(.buf.validate.field) = { ... }</code>
     * @return The index.
     */
    @java.lang.Override
    public int getIndex() {
      return index_;
    }

    public static final int DAYZOOMTABLEVALUE_FIELD_NUMBER = 2;
    private int dayZoomTableValue_ = 0;
    /**
     * <code>int32 DayZoomTableValue = 2 [(.buf.validate.field) = { ... }</code>
     * @return The dayZoomTableValue.
     */
    @java.lang.Override
    public int getDayZoomTableValue() {
      return dayZoomTableValue_;
    }

    public static final int HEATZOOMTABLEVALUE_FIELD_NUMBER = 3;
    private int heatZoomTableValue_ = 0;
    /**
     * <code>int32 HeatZoomTableValue = 3 [(.buf.validate.field) = { ... }</code>
     * @return The heatZoomTableValue.
     */
    @java.lang.Override
    public int getHeatZoomTableValue() {
      return heatZoomTableValue_;
    }

    public static final int AZIMUTH_FIELD_NUMBER = 4;
    private double azimuth_ = 0D;
    /**
     * <code>double azimuth = 4 [(.buf.validate.field) = { ... }</code>
     * @return The azimuth.
     */
    @java.lang.Override
    public double getAzimuth() {
      return azimuth_;
    }

    public static final int ELEVATION_FIELD_NUMBER = 5;
    private double elevation_ = 0D;
    /**
     * <code>double elevation = 5 [(.buf.validate.field) = { ... }</code>
     * @return The elevation.
     */
    @java.lang.Override
    public double getElevation() {
      return elevation_;
    }

    public static final int LINGER_FIELD_NUMBER = 6;
    private double linger_ = 0D;
    /**
     * <code>double linger = 6 [(.buf.validate.field) = { ... }</code>
     * @return The linger.
     */
    @java.lang.Override
    public double getLinger() {
      return linger_;
    }

    public static final int SPEED_FIELD_NUMBER = 7;
    private double speed_ = 0D;
    /**
     * <code>double speed = 7 [(.buf.validate.field) = { ... }</code>
     * @return The speed.
     */
    @java.lang.Override
    public double getSpeed() {
      return speed_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (index_ != 0) {
        output.writeInt32(1, index_);
      }
      if (dayZoomTableValue_ != 0) {
        output.writeInt32(2, dayZoomTableValue_);
      }
      if (heatZoomTableValue_ != 0) {
        output.writeInt32(3, heatZoomTableValue_);
      }
      if (java.lang.Double.doubleToRawLongBits(azimuth_) != 0) {
        output.writeDouble(4, azimuth_);
      }
      if (java.lang.Double.doubleToRawLongBits(elevation_) != 0) {
        output.writeDouble(5, elevation_);
      }
      if (java.lang.Double.doubleToRawLongBits(linger_) != 0) {
        output.writeDouble(6, linger_);
      }
      if (java.lang.Double.doubleToRawLongBits(speed_) != 0) {
        output.writeDouble(7, speed_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (index_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, index_);
      }
      if (dayZoomTableValue_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, dayZoomTableValue_);
      }
      if (heatZoomTableValue_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, heatZoomTableValue_);
      }
      if (java.lang.Double.doubleToRawLongBits(azimuth_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, azimuth_);
      }
      if (java.lang.Double.doubleToRawLongBits(elevation_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, elevation_);
      }
      if (java.lang.Double.doubleToRawLongBits(linger_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, linger_);
      }
      if (java.lang.Double.doubleToRawLongBits(speed_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, speed_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ser.JonSharedDataRotary.ScanNode)) {
        return super.equals(obj);
      }
      ser.JonSharedDataRotary.ScanNode other = (ser.JonSharedDataRotary.ScanNode) obj;

      if (getIndex()
          != other.getIndex()) return false;
      if (getDayZoomTableValue()
          != other.getDayZoomTableValue()) return false;
      if (getHeatZoomTableValue()
          != other.getHeatZoomTableValue()) return false;
      if (java.lang.Double.doubleToLongBits(getAzimuth())
          != java.lang.Double.doubleToLongBits(
              other.getAzimuth())) return false;
      if (java.lang.Double.doubleToLongBits(getElevation())
          != java.lang.Double.doubleToLongBits(
              other.getElevation())) return false;
      if (java.lang.Double.doubleToLongBits(getLinger())
          != java.lang.Double.doubleToLongBits(
              other.getLinger())) return false;
      if (java.lang.Double.doubleToLongBits(getSpeed())
          != java.lang.Double.doubleToLongBits(
              other.getSpeed())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getIndex();
      hash = (37 * hash) + DAYZOOMTABLEVALUE_FIELD_NUMBER;
      hash = (53 * hash) + getDayZoomTableValue();
      hash = (37 * hash) + HEATZOOMTABLEVALUE_FIELD_NUMBER;
      hash = (53 * hash) + getHeatZoomTableValue();
      hash = (37 * hash) + AZIMUTH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAzimuth()));
      hash = (37 * hash) + ELEVATION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getElevation()));
      hash = (37 * hash) + LINGER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLinger()));
      hash = (37 * hash) + SPEED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getSpeed()));
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ser.JonSharedDataRotary.ScanNode parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ser.JonSharedDataRotary.ScanNode parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ser.JonSharedDataRotary.ScanNode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ser.JonSharedDataRotary.ScanNode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ser.JonSharedDataRotary.ScanNode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ser.JonSharedDataRotary.ScanNode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ser.JonSharedDataRotary.ScanNode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ser.JonSharedDataRotary.ScanNode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static ser.JonSharedDataRotary.ScanNode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static ser.JonSharedDataRotary.ScanNode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ser.JonSharedDataRotary.ScanNode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ser.JonSharedDataRotary.ScanNode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ser.JonSharedDataRotary.ScanNode prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ser.ScanNode}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ser.ScanNode)
        ser.JonSharedDataRotary.ScanNodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ser.JonSharedDataRotary.internal_static_ser_ScanNode_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ser.JonSharedDataRotary.internal_static_ser_ScanNode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ser.JonSharedDataRotary.ScanNode.class, ser.JonSharedDataRotary.ScanNode.Builder.class);
      }

      // Construct using ser.JonSharedDataRotary.ScanNode.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        index_ = 0;
        dayZoomTableValue_ = 0;
        heatZoomTableValue_ = 0;
        azimuth_ = 0D;
        elevation_ = 0D;
        linger_ = 0D;
        speed_ = 0D;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ser.JonSharedDataRotary.internal_static_ser_ScanNode_descriptor;
      }

      @java.lang.Override
      public ser.JonSharedDataRotary.ScanNode getDefaultInstanceForType() {
        return ser.JonSharedDataRotary.ScanNode.getDefaultInstance();
      }

      @java.lang.Override
      public ser.JonSharedDataRotary.ScanNode build() {
        ser.JonSharedDataRotary.ScanNode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public ser.JonSharedDataRotary.ScanNode buildPartial() {
        ser.JonSharedDataRotary.ScanNode result = new ser.JonSharedDataRotary.ScanNode(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(ser.JonSharedDataRotary.ScanNode result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.index_ = index_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.dayZoomTableValue_ = dayZoomTableValue_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.heatZoomTableValue_ = heatZoomTableValue_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.azimuth_ = azimuth_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.elevation_ = elevation_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.linger_ = linger_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.speed_ = speed_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ser.JonSharedDataRotary.ScanNode) {
          return mergeFrom((ser.JonSharedDataRotary.ScanNode)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ser.JonSharedDataRotary.ScanNode other) {
        if (other == ser.JonSharedDataRotary.ScanNode.getDefaultInstance()) return this;
        if (other.getIndex() != 0) {
          setIndex(other.getIndex());
        }
        if (other.getDayZoomTableValue() != 0) {
          setDayZoomTableValue(other.getDayZoomTableValue());
        }
        if (other.getHeatZoomTableValue() != 0) {
          setHeatZoomTableValue(other.getHeatZoomTableValue());
        }
        if (other.getAzimuth() != 0D) {
          setAzimuth(other.getAzimuth());
        }
        if (other.getElevation() != 0D) {
          setElevation(other.getElevation());
        }
        if (other.getLinger() != 0D) {
          setLinger(other.getLinger());
        }
        if (other.getSpeed() != 0D) {
          setSpeed(other.getSpeed());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                index_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                dayZoomTableValue_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                heatZoomTableValue_ = input.readInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 33: {
                azimuth_ = input.readDouble();
                bitField0_ |= 0x00000008;
                break;
              } // case 33
              case 41: {
                elevation_ = input.readDouble();
                bitField0_ |= 0x00000010;
                break;
              } // case 41
              case 49: {
                linger_ = input.readDouble();
                bitField0_ |= 0x00000020;
                break;
              } // case 49
              case 57: {
                speed_ = input.readDouble();
                bitField0_ |= 0x00000040;
                break;
              } // case 57
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int index_ ;
      /**
       * <code>int32 index = 1 [(.buf.validate.field) = { ... }</code>
       * @return The index.
       */
      @java.lang.Override
      public int getIndex() {
        return index_;
      }
      /**
       * <code>int32 index = 1 [(.buf.validate.field) = { ... }</code>
       * @param value The index to set.
       * @return This builder for chaining.
       */
      public Builder setIndex(int value) {

        index_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int32 index = 1 [(.buf.validate.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        index_ = 0;
        onChanged();
        return this;
      }

      private int dayZoomTableValue_ ;
      /**
       * <code>int32 DayZoomTableValue = 2 [(.buf.validate.field) = { ... }</code>
       * @return The dayZoomTableValue.
       */
      @java.lang.Override
      public int getDayZoomTableValue() {
        return dayZoomTableValue_;
      }
      /**
       * <code>int32 DayZoomTableValue = 2 [(.buf.validate.field) = { ... }</code>
       * @param value The dayZoomTableValue to set.
       * @return This builder for chaining.
       */
      public Builder setDayZoomTableValue(int value) {

        dayZoomTableValue_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>int32 DayZoomTableValue = 2 [(.buf.validate.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearDayZoomTableValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        dayZoomTableValue_ = 0;
        onChanged();
        return this;
      }

      private int heatZoomTableValue_ ;
      /**
       * <code>int32 HeatZoomTableValue = 3 [(.buf.validate.field) = { ... }</code>
       * @return The heatZoomTableValue.
       */
      @java.lang.Override
      public int getHeatZoomTableValue() {
        return heatZoomTableValue_;
      }
      /**
       * <code>int32 HeatZoomTableValue = 3 [(.buf.validate.field) = { ... }</code>
       * @param value The heatZoomTableValue to set.
       * @return This builder for chaining.
       */
      public Builder setHeatZoomTableValue(int value) {

        heatZoomTableValue_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>int32 HeatZoomTableValue = 3 [(.buf.validate.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearHeatZoomTableValue() {
        bitField0_ = (bitField0_ & ~0x00000004);
        heatZoomTableValue_ = 0;
        onChanged();
        return this;
      }

      private double azimuth_ ;
      /**
       * <code>double azimuth = 4 [(.buf.validate.field) = { ... }</code>
       * @return The azimuth.
       */
      @java.lang.Override
      public double getAzimuth() {
        return azimuth_;
      }
      /**
       * <code>double azimuth = 4 [(.buf.validate.field) = { ... }</code>
       * @param value The azimuth to set.
       * @return This builder for chaining.
       */
      public Builder setAzimuth(double value) {

        azimuth_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>double azimuth = 4 [(.buf.validate.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearAzimuth() {
        bitField0_ = (bitField0_ & ~0x00000008);
        azimuth_ = 0D;
        onChanged();
        return this;
      }

      private double elevation_ ;
      /**
       * <code>double elevation = 5 [(.buf.validate.field) = { ... }</code>
       * @return The elevation.
       */
      @java.lang.Override
      public double getElevation() {
        return elevation_;
      }
      /**
       * <code>double elevation = 5 [(.buf.validate.field) = { ... }</code>
       * @param value The elevation to set.
       * @return This builder for chaining.
       */
      public Builder setElevation(double value) {

        elevation_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>double elevation = 5 [(.buf.validate.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearElevation() {
        bitField0_ = (bitField0_ & ~0x00000010);
        elevation_ = 0D;
        onChanged();
        return this;
      }

      private double linger_ ;
      /**
       * <code>double linger = 6 [(.buf.validate.field) = { ... }</code>
       * @return The linger.
       */
      @java.lang.Override
      public double getLinger() {
        return linger_;
      }
      /**
       * <code>double linger = 6 [(.buf.validate.field) = { ... }</code>
       * @param value The linger to set.
       * @return This builder for chaining.
       */
      public Builder setLinger(double value) {

        linger_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>double linger = 6 [(.buf.validate.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearLinger() {
        bitField0_ = (bitField0_ & ~0x00000020);
        linger_ = 0D;
        onChanged();
        return this;
      }

      private double speed_ ;
      /**
       * <code>double speed = 7 [(.buf.validate.field) = { ... }</code>
       * @return The speed.
       */
      @java.lang.Override
      public double getSpeed() {
        return speed_;
      }
      /**
       * <code>double speed = 7 [(.buf.validate.field) = { ... }</code>
       * @param value The speed to set.
       * @return This builder for chaining.
       */
      public Builder setSpeed(double value) {

        speed_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>double speed = 7 [(.buf.validate.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearSpeed() {
        bitField0_ = (bitField0_ & ~0x00000040);
        speed_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ser.ScanNode)
    }

    // @@protoc_insertion_point(class_scope:ser.ScanNode)
    private static final ser.JonSharedDataRotary.ScanNode DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ser.JonSharedDataRotary.ScanNode();
    }

    public static ser.JonSharedDataRotary.ScanNode getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ScanNode>
        PARSER = new com.google.protobuf.AbstractParser<ScanNode>() {
      @java.lang.Override
      public ScanNode parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ScanNode> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ScanNode> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public ser.JonSharedDataRotary.ScanNode getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ser_JonGuiDataRotary_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ser_JonGuiDataRotary_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ser_ScanNode_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ser_ScanNode_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\034jon_shared_data_rotary.proto\022\003ser\032\033buf" +
      "/validate/validate.proto\032\033jon_shared_dat" +
      "a_types.proto\"\221\010\n\020JonGuiDataRotary\022L\n\007az" +
      "imuth\030\001 \001(\001B;\272H8\0226\021\000\000\000\000\000\200v@)\000\000\000\000\000\000\000\000I\000\000\000" +
      "\000\000\000\000\000I\000\000\000\000\000\200V@I\000\000\000\000\000\200f@I\000\000\000\000\000\340p@\022[\n\razim" +
      "uth_speed\030\002 \001(\001BD\272HA\022?\031\000\000\000\000\000\000\360?)\000\000\000\000\000\000\360\277" +
      "I\000\000\000\000\000\000\360\277I\000\000\000\000\000\000\340\277I\000\000\000\000\000\000\000\000I\000\000\000\000\000\000\340?I\000\000\000" +
      "\000\000\000\360?\022E\n\televation\030\003 \001(\001B2\272H/\022-\031\000\000\000\000\000\200V@" +
      ")\000\000\000\000\000\200V\300I\000\000\000\000\000\200F\300I\000\000\000\000\000\000\000\000I\000\000\000\000\000\200F@\022]\n\017" +
      "elevation_speed\030\004 \001(\001BD\272HA\022?\031\000\000\000\000\000\000\360?)\000\000" +
      "\000\000\000\000\360\277I\000\000\000\000\000\000\360\277I\000\000\000\000\000\000\340\277I\000\000\000\000\000\000\000\000I\000\000\000\000\000\000" +
      "\340?I\000\000\000\000\000\000\360?\022U\n\020platform_azimuth\030\005 \001(\001B;\272" +
      "H8\0226\021\000\000\000\000\000\200v@)\000\000\000\000\000\000\000\000I\000\000\000\000\000\000\000\000I\000\000\000\000\000\200V@" +
      "I\000\000\000\000\000\200f@I\000\000\000\000\000\340p@\022N\n\022platform_elevation" +
      "\030\006 \001(\001B2\272H/\022-\031\000\000\000\000\000\200V@)\000\000\000\000\000\200V\300I\000\000\000\000\000\200F\300" +
      "I\000\000\000\000\000\000\000\000I\000\000\000\000\000\200F@\022I\n\rplatform_bank\030\007 \001(" +
      "\001B2\272H/\022-\021\000\000\000\000\000\200f@)\000\000\000\000\000\200f\300I\000\000\000\000\000\200V\300I\000\000\000\000" +
      "\000\000\000\000I\000\000\000\000\000\200V@\022\021\n\tis_moving\030\010 \001(\010\0223\n\004mode" +
      "\030\t \001(\0162\031.ser.JonGuiDataRotaryModeB\n\272H\007\202\001" +
      "\004\020\001 \000\022\023\n\013is_scanning\030\n \001(\010\022\032\n\022is_scannin" +
      "g_paused\030\013 \001(\010\022\035\n\025use_rotary_as_compass\030" +
      "\014 \001(\010\022\"\n\013scan_target\030\r \001(\005B\r\272H\n\032\010(\000@\001@\002@" +
      "\003\022&\n\017scan_target_max\030\016 \001(\005B\r\272H\n\032\010(\000@\001@\002@" +
      "\003\022P\n\013sun_azimuth\030\017 \001(\001B;\272H8\0226\021\000\000\000\000\000\200v@)\000" +
      "\000\000\000\000\000\000\000I\000\000\000\000\000\000\000\000I\000\000\000\000\000\200V@I\000\000\000\000\000\200f@I\000\000\000\000\000" +
      "\340p@\022R\n\rsun_elevation\030\020 \001(\001B;\272H8\0226\021\000\000\000\000\000\200" +
      "v@)\000\000\000\000\000\000\000\000I\000\000\000\000\000\000\000\000I\000\000\000\000\000\200V@I\000\000\000\000\000\200f@I\000" +
      "\000\000\000\000\340p@\0220\n\021current_scan_node\030\021 \001(\0132\r.ser" +
      ".ScanNodeB\006\272H\003\310\001\001\"\211\002\n\010ScanNode\022\026\n\005index\030" +
      "\001 \001(\005B\007\272H\004\032\002(\000\022\"\n\021DayZoomTableValue\030\002 \001(" +
      "\005B\007\272H\004\032\002(\000\022#\n\022HeatZoomTableValue\030\003 \001(\005B\007" +
      "\272H\004\032\002(\000\022(\n\007azimuth\030\004 \001(\001B\027\272H\024\022\022\021\000\000\000\000\000\200v@" +
      ")\000\000\000\000\000\000\000\000\022*\n\televation\030\005 \001(\001B\027\272H\024\022\022\031\000\000\000\000" +
      "\000\200V@)\000\000\000\000\000\200V\300\022\036\n\006linger\030\006 \001(\001B\016\272H\013\022\t)\000\000\000" +
      "\000\000\000\000\000\022&\n\005speed\030\007 \001(\001B\027\272H\024\022\022\031\000\000\000\000\000\000\360?!\000\000\000" +
      "\000\000\000\000\000BNZLgit-codecommit.eu-central-1.ama" +
      "zonaws.com/v1/repos/jettison/jonp/data/r" +
      "otaryb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          build.buf.validate.ValidateProto.getDescriptor(),
          ser.JonSharedDataTypes.getDescriptor(),
        });
    internal_static_ser_JonGuiDataRotary_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ser_JonGuiDataRotary_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ser_JonGuiDataRotary_descriptor,
        new java.lang.String[] { "Azimuth", "AzimuthSpeed", "Elevation", "ElevationSpeed", "PlatformAzimuth", "PlatformElevation", "PlatformBank", "IsMoving", "Mode", "IsScanning", "IsScanningPaused", "UseRotaryAsCompass", "ScanTarget", "ScanTargetMax", "SunAzimuth", "SunElevation", "CurrentScanNode", });
    internal_static_ser_ScanNode_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_ser_ScanNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ser_ScanNode_descriptor,
        new java.lang.String[] { "Index", "DayZoomTableValue", "HeatZoomTableValue", "Azimuth", "Elevation", "Linger", "Speed", });
    descriptor.resolveAllFeaturesImmutable();
    build.buf.validate.ValidateProto.getDescriptor();
    ser.JonSharedDataTypes.getDescriptor();
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(build.buf.validate.ValidateProto.field);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
