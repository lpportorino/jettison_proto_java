// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: jon_shared_data_camera_heat.proto
// Protobuf Java Version: 4.29.2

package ser;

public final class JonSharedDataCameraHeat {
  private JonSharedDataCameraHeat() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 2,
      /* suffix= */ "",
      JonSharedDataCameraHeat.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface JonGuiDataCameraHeatOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ser.JonGuiDataCameraHeat)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>double zoom_pos = 1 [(.buf.validate.field) = { ... }</code>
     * @return The zoomPos.
     */
    double getZoomPos();

    /**
     * <code>.ser.JonGuiDataVideoChannelHeatAGCModes agc_mode = 2 [(.buf.validate.field) = { ... }</code>
     * @return The enum numeric value on the wire for agcMode.
     */
    int getAgcModeValue();
    /**
     * <code>.ser.JonGuiDataVideoChannelHeatAGCModes agc_mode = 2 [(.buf.validate.field) = { ... }</code>
     * @return The agcMode.
     */
    ser.JonSharedDataTypes.JonGuiDataVideoChannelHeatAGCModes getAgcMode();

    /**
     * <code>.ser.JonGuiDataVideoChannelHeatFilters filter = 3 [(.buf.validate.field) = { ... }</code>
     * @return The enum numeric value on the wire for filter.
     */
    int getFilterValue();
    /**
     * <code>.ser.JonGuiDataVideoChannelHeatFilters filter = 3 [(.buf.validate.field) = { ... }</code>
     * @return The filter.
     */
    ser.JonSharedDataTypes.JonGuiDataVideoChannelHeatFilters getFilter();

    /**
     * <code>bool auto_focus = 4;</code>
     * @return The autoFocus.
     */
    boolean getAutoFocus();

    /**
     * <code>int32 zoom_table_pos = 5 [(.buf.validate.field) = { ... }</code>
     * @return The zoomTablePos.
     */
    int getZoomTablePos();

    /**
     * <code>int32 zoom_table_pos_max = 6 [(.buf.validate.field) = { ... }</code>
     * @return The zoomTablePosMax.
     */
    int getZoomTablePosMax();

    /**
     * <code>int32 dde_level = 7 [(.buf.validate.field) = { ... }</code>
     * @return The ddeLevel.
     */
    int getDdeLevel();

    /**
     * <code>bool dde_enabled = 8;</code>
     * @return The ddeEnabled.
     */
    boolean getDdeEnabled();

    /**
     * <code>.ser.JonGuiDataFxModeHeat fx_mode = 9 [(.buf.validate.field) = { ... }</code>
     * @return The enum numeric value on the wire for fxMode.
     */
    int getFxModeValue();
    /**
     * <code>.ser.JonGuiDataFxModeHeat fx_mode = 9 [(.buf.validate.field) = { ... }</code>
     * @return The fxMode.
     */
    ser.JonSharedDataTypes.JonGuiDataFxModeHeat getFxMode();

    /**
     * <code>double digital_zoom_level = 10 [(.buf.validate.field) = { ... }</code>
     * @return The digitalZoomLevel.
     */
    double getDigitalZoomLevel();

    /**
     * <code>double clahe_level = 11 [(.buf.validate.field) = { ... }</code>
     * @return The claheLevel.
     */
    double getClaheLevel();
  }
  /**
   * Protobuf type {@code ser.JonGuiDataCameraHeat}
   */
  public static final class JonGuiDataCameraHeat extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ser.JonGuiDataCameraHeat)
      JonGuiDataCameraHeatOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 2,
        /* suffix= */ "",
        JonGuiDataCameraHeat.class.getName());
    }
    // Use JonGuiDataCameraHeat.newBuilder() to construct.
    private JonGuiDataCameraHeat(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private JonGuiDataCameraHeat() {
      agcMode_ = 0;
      filter_ = 0;
      fxMode_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ser.JonSharedDataCameraHeat.internal_static_ser_JonGuiDataCameraHeat_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ser.JonSharedDataCameraHeat.internal_static_ser_JonGuiDataCameraHeat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ser.JonSharedDataCameraHeat.JonGuiDataCameraHeat.class, ser.JonSharedDataCameraHeat.JonGuiDataCameraHeat.Builder.class);
    }

    public static final int ZOOM_POS_FIELD_NUMBER = 1;
    private double zoomPos_ = 0D;
    /**
     * <code>double zoom_pos = 1 [(.buf.validate.field) = { ... }</code>
     * @return The zoomPos.
     */
    @java.lang.Override
    public double getZoomPos() {
      return zoomPos_;
    }

    public static final int AGC_MODE_FIELD_NUMBER = 2;
    private int agcMode_ = 0;
    /**
     * <code>.ser.JonGuiDataVideoChannelHeatAGCModes agc_mode = 2 [(.buf.validate.field) = { ... }</code>
     * @return The enum numeric value on the wire for agcMode.
     */
    @java.lang.Override public int getAgcModeValue() {
      return agcMode_;
    }
    /**
     * <code>.ser.JonGuiDataVideoChannelHeatAGCModes agc_mode = 2 [(.buf.validate.field) = { ... }</code>
     * @return The agcMode.
     */
    @java.lang.Override public ser.JonSharedDataTypes.JonGuiDataVideoChannelHeatAGCModes getAgcMode() {
      ser.JonSharedDataTypes.JonGuiDataVideoChannelHeatAGCModes result = ser.JonSharedDataTypes.JonGuiDataVideoChannelHeatAGCModes.forNumber(agcMode_);
      return result == null ? ser.JonSharedDataTypes.JonGuiDataVideoChannelHeatAGCModes.UNRECOGNIZED : result;
    }

    public static final int FILTER_FIELD_NUMBER = 3;
    private int filter_ = 0;
    /**
     * <code>.ser.JonGuiDataVideoChannelHeatFilters filter = 3 [(.buf.validate.field) = { ... }</code>
     * @return The enum numeric value on the wire for filter.
     */
    @java.lang.Override public int getFilterValue() {
      return filter_;
    }
    /**
     * <code>.ser.JonGuiDataVideoChannelHeatFilters filter = 3 [(.buf.validate.field) = { ... }</code>
     * @return The filter.
     */
    @java.lang.Override public ser.JonSharedDataTypes.JonGuiDataVideoChannelHeatFilters getFilter() {
      ser.JonSharedDataTypes.JonGuiDataVideoChannelHeatFilters result = ser.JonSharedDataTypes.JonGuiDataVideoChannelHeatFilters.forNumber(filter_);
      return result == null ? ser.JonSharedDataTypes.JonGuiDataVideoChannelHeatFilters.UNRECOGNIZED : result;
    }

    public static final int AUTO_FOCUS_FIELD_NUMBER = 4;
    private boolean autoFocus_ = false;
    /**
     * <code>bool auto_focus = 4;</code>
     * @return The autoFocus.
     */
    @java.lang.Override
    public boolean getAutoFocus() {
      return autoFocus_;
    }

    public static final int ZOOM_TABLE_POS_FIELD_NUMBER = 5;
    private int zoomTablePos_ = 0;
    /**
     * <code>int32 zoom_table_pos = 5 [(.buf.validate.field) = { ... }</code>
     * @return The zoomTablePos.
     */
    @java.lang.Override
    public int getZoomTablePos() {
      return zoomTablePos_;
    }

    public static final int ZOOM_TABLE_POS_MAX_FIELD_NUMBER = 6;
    private int zoomTablePosMax_ = 0;
    /**
     * <code>int32 zoom_table_pos_max = 6 [(.buf.validate.field) = { ... }</code>
     * @return The zoomTablePosMax.
     */
    @java.lang.Override
    public int getZoomTablePosMax() {
      return zoomTablePosMax_;
    }

    public static final int DDE_LEVEL_FIELD_NUMBER = 7;
    private int ddeLevel_ = 0;
    /**
     * <code>int32 dde_level = 7 [(.buf.validate.field) = { ... }</code>
     * @return The ddeLevel.
     */
    @java.lang.Override
    public int getDdeLevel() {
      return ddeLevel_;
    }

    public static final int DDE_ENABLED_FIELD_NUMBER = 8;
    private boolean ddeEnabled_ = false;
    /**
     * <code>bool dde_enabled = 8;</code>
     * @return The ddeEnabled.
     */
    @java.lang.Override
    public boolean getDdeEnabled() {
      return ddeEnabled_;
    }

    public static final int FX_MODE_FIELD_NUMBER = 9;
    private int fxMode_ = 0;
    /**
     * <code>.ser.JonGuiDataFxModeHeat fx_mode = 9 [(.buf.validate.field) = { ... }</code>
     * @return The enum numeric value on the wire for fxMode.
     */
    @java.lang.Override public int getFxModeValue() {
      return fxMode_;
    }
    /**
     * <code>.ser.JonGuiDataFxModeHeat fx_mode = 9 [(.buf.validate.field) = { ... }</code>
     * @return The fxMode.
     */
    @java.lang.Override public ser.JonSharedDataTypes.JonGuiDataFxModeHeat getFxMode() {
      ser.JonSharedDataTypes.JonGuiDataFxModeHeat result = ser.JonSharedDataTypes.JonGuiDataFxModeHeat.forNumber(fxMode_);
      return result == null ? ser.JonSharedDataTypes.JonGuiDataFxModeHeat.UNRECOGNIZED : result;
    }

    public static final int DIGITAL_ZOOM_LEVEL_FIELD_NUMBER = 10;
    private double digitalZoomLevel_ = 0D;
    /**
     * <code>double digital_zoom_level = 10 [(.buf.validate.field) = { ... }</code>
     * @return The digitalZoomLevel.
     */
    @java.lang.Override
    public double getDigitalZoomLevel() {
      return digitalZoomLevel_;
    }

    public static final int CLAHE_LEVEL_FIELD_NUMBER = 11;
    private double claheLevel_ = 0D;
    /**
     * <code>double clahe_level = 11 [(.buf.validate.field) = { ... }</code>
     * @return The claheLevel.
     */
    @java.lang.Override
    public double getClaheLevel() {
      return claheLevel_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (java.lang.Double.doubleToRawLongBits(zoomPos_) != 0) {
        output.writeDouble(1, zoomPos_);
      }
      if (agcMode_ != ser.JonSharedDataTypes.JonGuiDataVideoChannelHeatAGCModes.JON_GUI_DATA_VIDEO_CHANNEL_HEAT_AGC_MODE_UNSPECIFIED.getNumber()) {
        output.writeEnum(2, agcMode_);
      }
      if (filter_ != ser.JonSharedDataTypes.JonGuiDataVideoChannelHeatFilters.JON_GUI_DATA_VIDEO_CHANNEL_HEAT_FILTER_UNSPECIFIED.getNumber()) {
        output.writeEnum(3, filter_);
      }
      if (autoFocus_ != false) {
        output.writeBool(4, autoFocus_);
      }
      if (zoomTablePos_ != 0) {
        output.writeInt32(5, zoomTablePos_);
      }
      if (zoomTablePosMax_ != 0) {
        output.writeInt32(6, zoomTablePosMax_);
      }
      if (ddeLevel_ != 0) {
        output.writeInt32(7, ddeLevel_);
      }
      if (ddeEnabled_ != false) {
        output.writeBool(8, ddeEnabled_);
      }
      if (fxMode_ != ser.JonSharedDataTypes.JonGuiDataFxModeHeat.JON_GUI_DATA_FX_MODE_HEAT_DEFAULT.getNumber()) {
        output.writeEnum(9, fxMode_);
      }
      if (java.lang.Double.doubleToRawLongBits(digitalZoomLevel_) != 0) {
        output.writeDouble(10, digitalZoomLevel_);
      }
      if (java.lang.Double.doubleToRawLongBits(claheLevel_) != 0) {
        output.writeDouble(11, claheLevel_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (java.lang.Double.doubleToRawLongBits(zoomPos_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, zoomPos_);
      }
      if (agcMode_ != ser.JonSharedDataTypes.JonGuiDataVideoChannelHeatAGCModes.JON_GUI_DATA_VIDEO_CHANNEL_HEAT_AGC_MODE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, agcMode_);
      }
      if (filter_ != ser.JonSharedDataTypes.JonGuiDataVideoChannelHeatFilters.JON_GUI_DATA_VIDEO_CHANNEL_HEAT_FILTER_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, filter_);
      }
      if (autoFocus_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, autoFocus_);
      }
      if (zoomTablePos_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, zoomTablePos_);
      }
      if (zoomTablePosMax_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, zoomTablePosMax_);
      }
      if (ddeLevel_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, ddeLevel_);
      }
      if (ddeEnabled_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, ddeEnabled_);
      }
      if (fxMode_ != ser.JonSharedDataTypes.JonGuiDataFxModeHeat.JON_GUI_DATA_FX_MODE_HEAT_DEFAULT.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, fxMode_);
      }
      if (java.lang.Double.doubleToRawLongBits(digitalZoomLevel_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, digitalZoomLevel_);
      }
      if (java.lang.Double.doubleToRawLongBits(claheLevel_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(11, claheLevel_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ser.JonSharedDataCameraHeat.JonGuiDataCameraHeat)) {
        return super.equals(obj);
      }
      ser.JonSharedDataCameraHeat.JonGuiDataCameraHeat other = (ser.JonSharedDataCameraHeat.JonGuiDataCameraHeat) obj;

      if (java.lang.Double.doubleToLongBits(getZoomPos())
          != java.lang.Double.doubleToLongBits(
              other.getZoomPos())) return false;
      if (agcMode_ != other.agcMode_) return false;
      if (filter_ != other.filter_) return false;
      if (getAutoFocus()
          != other.getAutoFocus()) return false;
      if (getZoomTablePos()
          != other.getZoomTablePos()) return false;
      if (getZoomTablePosMax()
          != other.getZoomTablePosMax()) return false;
      if (getDdeLevel()
          != other.getDdeLevel()) return false;
      if (getDdeEnabled()
          != other.getDdeEnabled()) return false;
      if (fxMode_ != other.fxMode_) return false;
      if (java.lang.Double.doubleToLongBits(getDigitalZoomLevel())
          != java.lang.Double.doubleToLongBits(
              other.getDigitalZoomLevel())) return false;
      if (java.lang.Double.doubleToLongBits(getClaheLevel())
          != java.lang.Double.doubleToLongBits(
              other.getClaheLevel())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ZOOM_POS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getZoomPos()));
      hash = (37 * hash) + AGC_MODE_FIELD_NUMBER;
      hash = (53 * hash) + agcMode_;
      hash = (37 * hash) + FILTER_FIELD_NUMBER;
      hash = (53 * hash) + filter_;
      hash = (37 * hash) + AUTO_FOCUS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getAutoFocus());
      hash = (37 * hash) + ZOOM_TABLE_POS_FIELD_NUMBER;
      hash = (53 * hash) + getZoomTablePos();
      hash = (37 * hash) + ZOOM_TABLE_POS_MAX_FIELD_NUMBER;
      hash = (53 * hash) + getZoomTablePosMax();
      hash = (37 * hash) + DDE_LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getDdeLevel();
      hash = (37 * hash) + DDE_ENABLED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDdeEnabled());
      hash = (37 * hash) + FX_MODE_FIELD_NUMBER;
      hash = (53 * hash) + fxMode_;
      hash = (37 * hash) + DIGITAL_ZOOM_LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getDigitalZoomLevel()));
      hash = (37 * hash) + CLAHE_LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getClaheLevel()));
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ser.JonSharedDataCameraHeat.JonGuiDataCameraHeat parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ser.JonSharedDataCameraHeat.JonGuiDataCameraHeat parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ser.JonSharedDataCameraHeat.JonGuiDataCameraHeat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ser.JonSharedDataCameraHeat.JonGuiDataCameraHeat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ser.JonSharedDataCameraHeat.JonGuiDataCameraHeat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ser.JonSharedDataCameraHeat.JonGuiDataCameraHeat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ser.JonSharedDataCameraHeat.JonGuiDataCameraHeat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ser.JonSharedDataCameraHeat.JonGuiDataCameraHeat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static ser.JonSharedDataCameraHeat.JonGuiDataCameraHeat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static ser.JonSharedDataCameraHeat.JonGuiDataCameraHeat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ser.JonSharedDataCameraHeat.JonGuiDataCameraHeat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ser.JonSharedDataCameraHeat.JonGuiDataCameraHeat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ser.JonSharedDataCameraHeat.JonGuiDataCameraHeat prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ser.JonGuiDataCameraHeat}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ser.JonGuiDataCameraHeat)
        ser.JonSharedDataCameraHeat.JonGuiDataCameraHeatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ser.JonSharedDataCameraHeat.internal_static_ser_JonGuiDataCameraHeat_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ser.JonSharedDataCameraHeat.internal_static_ser_JonGuiDataCameraHeat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ser.JonSharedDataCameraHeat.JonGuiDataCameraHeat.class, ser.JonSharedDataCameraHeat.JonGuiDataCameraHeat.Builder.class);
      }

      // Construct using ser.JonSharedDataCameraHeat.JonGuiDataCameraHeat.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        zoomPos_ = 0D;
        agcMode_ = 0;
        filter_ = 0;
        autoFocus_ = false;
        zoomTablePos_ = 0;
        zoomTablePosMax_ = 0;
        ddeLevel_ = 0;
        ddeEnabled_ = false;
        fxMode_ = 0;
        digitalZoomLevel_ = 0D;
        claheLevel_ = 0D;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ser.JonSharedDataCameraHeat.internal_static_ser_JonGuiDataCameraHeat_descriptor;
      }

      @java.lang.Override
      public ser.JonSharedDataCameraHeat.JonGuiDataCameraHeat getDefaultInstanceForType() {
        return ser.JonSharedDataCameraHeat.JonGuiDataCameraHeat.getDefaultInstance();
      }

      @java.lang.Override
      public ser.JonSharedDataCameraHeat.JonGuiDataCameraHeat build() {
        ser.JonSharedDataCameraHeat.JonGuiDataCameraHeat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public ser.JonSharedDataCameraHeat.JonGuiDataCameraHeat buildPartial() {
        ser.JonSharedDataCameraHeat.JonGuiDataCameraHeat result = new ser.JonSharedDataCameraHeat.JonGuiDataCameraHeat(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(ser.JonSharedDataCameraHeat.JonGuiDataCameraHeat result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.zoomPos_ = zoomPos_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.agcMode_ = agcMode_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.filter_ = filter_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.autoFocus_ = autoFocus_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.zoomTablePos_ = zoomTablePos_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.zoomTablePosMax_ = zoomTablePosMax_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.ddeLevel_ = ddeLevel_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.ddeEnabled_ = ddeEnabled_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.fxMode_ = fxMode_;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.digitalZoomLevel_ = digitalZoomLevel_;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.claheLevel_ = claheLevel_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ser.JonSharedDataCameraHeat.JonGuiDataCameraHeat) {
          return mergeFrom((ser.JonSharedDataCameraHeat.JonGuiDataCameraHeat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ser.JonSharedDataCameraHeat.JonGuiDataCameraHeat other) {
        if (other == ser.JonSharedDataCameraHeat.JonGuiDataCameraHeat.getDefaultInstance()) return this;
        if (other.getZoomPos() != 0D) {
          setZoomPos(other.getZoomPos());
        }
        if (other.agcMode_ != 0) {
          setAgcModeValue(other.getAgcModeValue());
        }
        if (other.filter_ != 0) {
          setFilterValue(other.getFilterValue());
        }
        if (other.getAutoFocus() != false) {
          setAutoFocus(other.getAutoFocus());
        }
        if (other.getZoomTablePos() != 0) {
          setZoomTablePos(other.getZoomTablePos());
        }
        if (other.getZoomTablePosMax() != 0) {
          setZoomTablePosMax(other.getZoomTablePosMax());
        }
        if (other.getDdeLevel() != 0) {
          setDdeLevel(other.getDdeLevel());
        }
        if (other.getDdeEnabled() != false) {
          setDdeEnabled(other.getDdeEnabled());
        }
        if (other.fxMode_ != 0) {
          setFxModeValue(other.getFxModeValue());
        }
        if (other.getDigitalZoomLevel() != 0D) {
          setDigitalZoomLevel(other.getDigitalZoomLevel());
        }
        if (other.getClaheLevel() != 0D) {
          setClaheLevel(other.getClaheLevel());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {
                zoomPos_ = input.readDouble();
                bitField0_ |= 0x00000001;
                break;
              } // case 9
              case 16: {
                agcMode_ = input.readEnum();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                filter_ = input.readEnum();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                autoFocus_ = input.readBool();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                zoomTablePos_ = input.readInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                zoomTablePosMax_ = input.readInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                ddeLevel_ = input.readInt32();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 64: {
                ddeEnabled_ = input.readBool();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 72: {
                fxMode_ = input.readEnum();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              case 81: {
                digitalZoomLevel_ = input.readDouble();
                bitField0_ |= 0x00000200;
                break;
              } // case 81
              case 89: {
                claheLevel_ = input.readDouble();
                bitField0_ |= 0x00000400;
                break;
              } // case 89
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private double zoomPos_ ;
      /**
       * <code>double zoom_pos = 1 [(.buf.validate.field) = { ... }</code>
       * @return The zoomPos.
       */
      @java.lang.Override
      public double getZoomPos() {
        return zoomPos_;
      }
      /**
       * <code>double zoom_pos = 1 [(.buf.validate.field) = { ... }</code>
       * @param value The zoomPos to set.
       * @return This builder for chaining.
       */
      public Builder setZoomPos(double value) {

        zoomPos_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>double zoom_pos = 1 [(.buf.validate.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearZoomPos() {
        bitField0_ = (bitField0_ & ~0x00000001);
        zoomPos_ = 0D;
        onChanged();
        return this;
      }

      private int agcMode_ = 0;
      /**
       * <code>.ser.JonGuiDataVideoChannelHeatAGCModes agc_mode = 2 [(.buf.validate.field) = { ... }</code>
       * @return The enum numeric value on the wire for agcMode.
       */
      @java.lang.Override public int getAgcModeValue() {
        return agcMode_;
      }
      /**
       * <code>.ser.JonGuiDataVideoChannelHeatAGCModes agc_mode = 2 [(.buf.validate.field) = { ... }</code>
       * @param value The enum numeric value on the wire for agcMode to set.
       * @return This builder for chaining.
       */
      public Builder setAgcModeValue(int value) {
        agcMode_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.ser.JonGuiDataVideoChannelHeatAGCModes agc_mode = 2 [(.buf.validate.field) = { ... }</code>
       * @return The agcMode.
       */
      @java.lang.Override
      public ser.JonSharedDataTypes.JonGuiDataVideoChannelHeatAGCModes getAgcMode() {
        ser.JonSharedDataTypes.JonGuiDataVideoChannelHeatAGCModes result = ser.JonSharedDataTypes.JonGuiDataVideoChannelHeatAGCModes.forNumber(agcMode_);
        return result == null ? ser.JonSharedDataTypes.JonGuiDataVideoChannelHeatAGCModes.UNRECOGNIZED : result;
      }
      /**
       * <code>.ser.JonGuiDataVideoChannelHeatAGCModes agc_mode = 2 [(.buf.validate.field) = { ... }</code>
       * @param value The agcMode to set.
       * @return This builder for chaining.
       */
      public Builder setAgcMode(ser.JonSharedDataTypes.JonGuiDataVideoChannelHeatAGCModes value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        agcMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.ser.JonGuiDataVideoChannelHeatAGCModes agc_mode = 2 [(.buf.validate.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearAgcMode() {
        bitField0_ = (bitField0_ & ~0x00000002);
        agcMode_ = 0;
        onChanged();
        return this;
      }

      private int filter_ = 0;
      /**
       * <code>.ser.JonGuiDataVideoChannelHeatFilters filter = 3 [(.buf.validate.field) = { ... }</code>
       * @return The enum numeric value on the wire for filter.
       */
      @java.lang.Override public int getFilterValue() {
        return filter_;
      }
      /**
       * <code>.ser.JonGuiDataVideoChannelHeatFilters filter = 3 [(.buf.validate.field) = { ... }</code>
       * @param value The enum numeric value on the wire for filter to set.
       * @return This builder for chaining.
       */
      public Builder setFilterValue(int value) {
        filter_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>.ser.JonGuiDataVideoChannelHeatFilters filter = 3 [(.buf.validate.field) = { ... }</code>
       * @return The filter.
       */
      @java.lang.Override
      public ser.JonSharedDataTypes.JonGuiDataVideoChannelHeatFilters getFilter() {
        ser.JonSharedDataTypes.JonGuiDataVideoChannelHeatFilters result = ser.JonSharedDataTypes.JonGuiDataVideoChannelHeatFilters.forNumber(filter_);
        return result == null ? ser.JonSharedDataTypes.JonGuiDataVideoChannelHeatFilters.UNRECOGNIZED : result;
      }
      /**
       * <code>.ser.JonGuiDataVideoChannelHeatFilters filter = 3 [(.buf.validate.field) = { ... }</code>
       * @param value The filter to set.
       * @return This builder for chaining.
       */
      public Builder setFilter(ser.JonSharedDataTypes.JonGuiDataVideoChannelHeatFilters value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        filter_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.ser.JonGuiDataVideoChannelHeatFilters filter = 3 [(.buf.validate.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearFilter() {
        bitField0_ = (bitField0_ & ~0x00000004);
        filter_ = 0;
        onChanged();
        return this;
      }

      private boolean autoFocus_ ;
      /**
       * <code>bool auto_focus = 4;</code>
       * @return The autoFocus.
       */
      @java.lang.Override
      public boolean getAutoFocus() {
        return autoFocus_;
      }
      /**
       * <code>bool auto_focus = 4;</code>
       * @param value The autoFocus to set.
       * @return This builder for chaining.
       */
      public Builder setAutoFocus(boolean value) {

        autoFocus_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>bool auto_focus = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearAutoFocus() {
        bitField0_ = (bitField0_ & ~0x00000008);
        autoFocus_ = false;
        onChanged();
        return this;
      }

      private int zoomTablePos_ ;
      /**
       * <code>int32 zoom_table_pos = 5 [(.buf.validate.field) = { ... }</code>
       * @return The zoomTablePos.
       */
      @java.lang.Override
      public int getZoomTablePos() {
        return zoomTablePos_;
      }
      /**
       * <code>int32 zoom_table_pos = 5 [(.buf.validate.field) = { ... }</code>
       * @param value The zoomTablePos to set.
       * @return This builder for chaining.
       */
      public Builder setZoomTablePos(int value) {

        zoomTablePos_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>int32 zoom_table_pos = 5 [(.buf.validate.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearZoomTablePos() {
        bitField0_ = (bitField0_ & ~0x00000010);
        zoomTablePos_ = 0;
        onChanged();
        return this;
      }

      private int zoomTablePosMax_ ;
      /**
       * <code>int32 zoom_table_pos_max = 6 [(.buf.validate.field) = { ... }</code>
       * @return The zoomTablePosMax.
       */
      @java.lang.Override
      public int getZoomTablePosMax() {
        return zoomTablePosMax_;
      }
      /**
       * <code>int32 zoom_table_pos_max = 6 [(.buf.validate.field) = { ... }</code>
       * @param value The zoomTablePosMax to set.
       * @return This builder for chaining.
       */
      public Builder setZoomTablePosMax(int value) {

        zoomTablePosMax_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>int32 zoom_table_pos_max = 6 [(.buf.validate.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearZoomTablePosMax() {
        bitField0_ = (bitField0_ & ~0x00000020);
        zoomTablePosMax_ = 0;
        onChanged();
        return this;
      }

      private int ddeLevel_ ;
      /**
       * <code>int32 dde_level = 7 [(.buf.validate.field) = { ... }</code>
       * @return The ddeLevel.
       */
      @java.lang.Override
      public int getDdeLevel() {
        return ddeLevel_;
      }
      /**
       * <code>int32 dde_level = 7 [(.buf.validate.field) = { ... }</code>
       * @param value The ddeLevel to set.
       * @return This builder for chaining.
       */
      public Builder setDdeLevel(int value) {

        ddeLevel_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>int32 dde_level = 7 [(.buf.validate.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearDdeLevel() {
        bitField0_ = (bitField0_ & ~0x00000040);
        ddeLevel_ = 0;
        onChanged();
        return this;
      }

      private boolean ddeEnabled_ ;
      /**
       * <code>bool dde_enabled = 8;</code>
       * @return The ddeEnabled.
       */
      @java.lang.Override
      public boolean getDdeEnabled() {
        return ddeEnabled_;
      }
      /**
       * <code>bool dde_enabled = 8;</code>
       * @param value The ddeEnabled to set.
       * @return This builder for chaining.
       */
      public Builder setDdeEnabled(boolean value) {

        ddeEnabled_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>bool dde_enabled = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearDdeEnabled() {
        bitField0_ = (bitField0_ & ~0x00000080);
        ddeEnabled_ = false;
        onChanged();
        return this;
      }

      private int fxMode_ = 0;
      /**
       * <code>.ser.JonGuiDataFxModeHeat fx_mode = 9 [(.buf.validate.field) = { ... }</code>
       * @return The enum numeric value on the wire for fxMode.
       */
      @java.lang.Override public int getFxModeValue() {
        return fxMode_;
      }
      /**
       * <code>.ser.JonGuiDataFxModeHeat fx_mode = 9 [(.buf.validate.field) = { ... }</code>
       * @param value The enum numeric value on the wire for fxMode to set.
       * @return This builder for chaining.
       */
      public Builder setFxModeValue(int value) {
        fxMode_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>.ser.JonGuiDataFxModeHeat fx_mode = 9 [(.buf.validate.field) = { ... }</code>
       * @return The fxMode.
       */
      @java.lang.Override
      public ser.JonSharedDataTypes.JonGuiDataFxModeHeat getFxMode() {
        ser.JonSharedDataTypes.JonGuiDataFxModeHeat result = ser.JonSharedDataTypes.JonGuiDataFxModeHeat.forNumber(fxMode_);
        return result == null ? ser.JonSharedDataTypes.JonGuiDataFxModeHeat.UNRECOGNIZED : result;
      }
      /**
       * <code>.ser.JonGuiDataFxModeHeat fx_mode = 9 [(.buf.validate.field) = { ... }</code>
       * @param value The fxMode to set.
       * @return This builder for chaining.
       */
      public Builder setFxMode(ser.JonSharedDataTypes.JonGuiDataFxModeHeat value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000100;
        fxMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.ser.JonGuiDataFxModeHeat fx_mode = 9 [(.buf.validate.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearFxMode() {
        bitField0_ = (bitField0_ & ~0x00000100);
        fxMode_ = 0;
        onChanged();
        return this;
      }

      private double digitalZoomLevel_ ;
      /**
       * <code>double digital_zoom_level = 10 [(.buf.validate.field) = { ... }</code>
       * @return The digitalZoomLevel.
       */
      @java.lang.Override
      public double getDigitalZoomLevel() {
        return digitalZoomLevel_;
      }
      /**
       * <code>double digital_zoom_level = 10 [(.buf.validate.field) = { ... }</code>
       * @param value The digitalZoomLevel to set.
       * @return This builder for chaining.
       */
      public Builder setDigitalZoomLevel(double value) {

        digitalZoomLevel_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>double digital_zoom_level = 10 [(.buf.validate.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearDigitalZoomLevel() {
        bitField0_ = (bitField0_ & ~0x00000200);
        digitalZoomLevel_ = 0D;
        onChanged();
        return this;
      }

      private double claheLevel_ ;
      /**
       * <code>double clahe_level = 11 [(.buf.validate.field) = { ... }</code>
       * @return The claheLevel.
       */
      @java.lang.Override
      public double getClaheLevel() {
        return claheLevel_;
      }
      /**
       * <code>double clahe_level = 11 [(.buf.validate.field) = { ... }</code>
       * @param value The claheLevel to set.
       * @return This builder for chaining.
       */
      public Builder setClaheLevel(double value) {

        claheLevel_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>double clahe_level = 11 [(.buf.validate.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearClaheLevel() {
        bitField0_ = (bitField0_ & ~0x00000400);
        claheLevel_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ser.JonGuiDataCameraHeat)
    }

    // @@protoc_insertion_point(class_scope:ser.JonGuiDataCameraHeat)
    private static final ser.JonSharedDataCameraHeat.JonGuiDataCameraHeat DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ser.JonSharedDataCameraHeat.JonGuiDataCameraHeat();
    }

    public static ser.JonSharedDataCameraHeat.JonGuiDataCameraHeat getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<JonGuiDataCameraHeat>
        PARSER = new com.google.protobuf.AbstractParser<JonGuiDataCameraHeat>() {
      @java.lang.Override
      public JonGuiDataCameraHeat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<JonGuiDataCameraHeat> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<JonGuiDataCameraHeat> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public ser.JonSharedDataCameraHeat.JonGuiDataCameraHeat getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ser_JonGuiDataCameraHeat_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ser_JonGuiDataCameraHeat_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n!jon_shared_data_camera_heat.proto\022\003ser" +
      "\032\033buf/validate/validate.proto\032\033jon_share" +
      "d_data_types.proto\"\352\003\n\024JonGuiDataCameraH" +
      "eat\022)\n\010zoom_pos\030\001 \001(\001B\027\272H\024\022\022\031\000\000\000\000\000\000\360?)\000\000" +
      "\000\000\000\000\000\000\022E\n\010agc_mode\030\002 \001(\0162\'.ser.JonGuiDat" +
      "aVideoChannelHeatAGCModesB\n\272H\007\202\001\004\020\001 \000\022B\n" +
      "\006filter\030\003 \001(\0162&.ser.JonGuiDataVideoChann" +
      "elHeatFiltersB\n\272H\007\202\001\004\020\001 \000\022\022\n\nauto_focus\030" +
      "\004 \001(\010\022\037\n\016zoom_table_pos\030\005 \001(\005B\007\272H\004\032\002(\000\022#" +
      "\n\022zoom_table_pos_max\030\006 \001(\005B\007\272H\004\032\002(\000\022\035\n\td" +
      "de_level\030\007 \001(\005B\n\272H\007\032\005\030\200\004(\000\022\023\n\013dde_enable" +
      "d\030\010 \001(\010\0224\n\007fx_mode\030\t \001(\0162\031.ser.JonGuiDat" +
      "aFxModeHeatB\010\272H\005\202\001\002\020\001\022*\n\022digital_zoom_le" +
      "vel\030\n \001(\001B\016\272H\013\022\t)\000\000\000\000\000\000\360?\022,\n\013clahe_level" +
      "\030\013 \001(\001B\027\272H\024\022\022\031\000\000\000\000\000\000\360?)\000\000\000\000\000\000\000\000BSZQgit-c" +
      "odecommit.eu-central-1.amazonaws.com/v1/" +
      "repos/jettison/jonp/data/camera_heatb\006pr" +
      "oto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          build.buf.validate.ValidateProto.getDescriptor(),
          ser.JonSharedDataTypes.getDescriptor(),
        });
    internal_static_ser_JonGuiDataCameraHeat_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ser_JonGuiDataCameraHeat_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ser_JonGuiDataCameraHeat_descriptor,
        new java.lang.String[] { "ZoomPos", "AgcMode", "Filter", "AutoFocus", "ZoomTablePos", "ZoomTablePosMax", "DdeLevel", "DdeEnabled", "FxMode", "DigitalZoomLevel", "ClaheLevel", });
    descriptor.resolveAllFeaturesImmutable();
    build.buf.validate.ValidateProto.getDescriptor();
    ser.JonSharedDataTypes.getDescriptor();
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(build.buf.validate.ValidateProto.field);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
